<ui:composition template="/WEB-INF/templates/layout.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:os="http://omnifaces.org/showcase"
>
	<ui:define name="contentTitle">What's new in OmniFaces?</ui:define>

	<ui:define name="content">
		<h:messages styleClass="messages" errorClass="error" globalOnly="true" />

		<p:tabView id="versions">
			<p:tab id="v3" title="3.x">
				<h2 id="3_14">What's new in OmniFaces 3.14?</h2>
				<p><em>Release date: ? October, 2022</em></p>

				<h3>Added in OmniFaces 3.14</h3>
				<ul>
					<li><os:githubLink issue="703" /><code>org.omnifaces.SKIP_DEPLOYMENT_EXCEPTION</code> context parameter has been added; when set to <code>true</code> then any OmniFaces initialization failure will not anymore block the application deployment</li>
					<li><os:githubLink issue="673" /><h:link outcome="/utils/Beans"><code>Beans#getInstance(String name)</code></h:link> new overloaded utility methods to obtain CDI managed bean instance by name instead of by class</li>
					<li><os:githubLink issue="710" /><h:link outcome="/utils/Servlets"><code>Servlets#getWebXmlURL()</code></h:link> to obtain URL of currently used <code>web.xml</code> file, regardless of whether it's in <code>WEB-INF</code> folder or <code>META-INF</code> folder, as used by among others Quarkus</li>
					<li><os:githubLink issue="679" /><h:link outcome="/filters/MutableRequestFilter"><code>MutableRequestFilter</code></h:link> which allows manipulating the request headers and parameters, along with new helper methods in <h:link outcome="/utils/Faces"><code>Faces/FacesLocal#getMutableRequestXxxMap()</code></h:link> and <h:link outcome="/utils/Servlets"><code>Servlets#getMutableRequestXxxMap()</code></h:link></li>
					<li><os:githubLink issue="712" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> got a new configuration option to only accept the lowercased form of the request URI: <code>org.omnifaces.FACES_VIEWS_LOWERCASED_REQUEST_URI</code></li>
				</ul>

				<h3>Fixed in OmniFaces 3.14</h3>
				<ul>
					<li><os:githubLink issue="710" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> failed to find welcome files in Quarkus environment</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_20');return false;">Remaining fixes are same as in 2.7.20</a></li>
				</ul>

				<h3>Changed in OmniFaces 3.14</h3>
				<ul>
					<li><os:githubLink issue="711" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews#registerViewHander()</code></h:link> method name typo has been fixed to <code>FacesViews#registerViewHandler()</code></li>
				</ul>

				<h2 id="3_13_4">What's new in OmniFaces 3.13.4?</h2>
				<p><em>Release date: 14 August, 2022</em></p>

				<h3>Fixed in OmniFaces 3.13.4</h3>
				<ul>
					<li><os:githubLink issue="699" /><h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link> partial submit behavior has been fixed and improved</li>
					<li><os:githubLink issue="701" /><h:link outcome="/utils/JNDIObjectLocator"><code>JNDIObjectLocator</code></h:link> deadlock on failure path</li>
					<li><os:githubLink issue="702" /><h:link outcome="/filters/FacesExceptionFilter"><code>FacesExceptionFilter</code></h:link> didn't respect <code>org.omnifaces.EXCEPTION_TYPES_TO_UNWRAP</code> when the exception was <em>not</em> wrapped in a <code>ServletException</code></li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_19');return false;">Remaining fixes are same as in 2.7.19</a></li>
				</ul>

				<hr />

				<h2 id="3_13_3">What's new in OmniFaces 3.13.3?</h2>
				<p><em>Release date: 14 May, 2022</em></p>

				<h3>Fixed in OmniFaces 3.13.3</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_18');return false;">Fixes are same as in 2.7.18</a></li>
				</ul>

				<hr />

				<h2 id="3_13_2">What's new in OmniFaces 3.13.2?</h2>
				<p><em>Release date: 2 May, 2022</em></p>

				<h3>Fixed in OmniFaces 3.13.2</h3>
				<ul>
					<li><os:githubLink issue="687" /><h:link outcome="/taghandlers/importConstants"><code>&lt;o:importConstants&gt;</code></h:link> fix done in 3.13.1 bugged when enum implements interface</li>
				</ul>

				<hr />

				<h2 id="3_13_1">What's new in OmniFaces 3.13.1?</h2>
				<p><em>Release date: 1 May, 2022</em></p>

				<h3>Fixed in OmniFaces 3.13.1</h3>
				<ul>
					<li><os:githubLink issue="671" /><h:link outcome="/components/scriptParam"><code>&lt;o:scriptParam&gt;</code></h:link> in combination with <code>&lt;f:viewAction&gt;</code> referencing a <h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> bean threw "Component ID omnifaces_omnifaces_js has already been found in the view"</li>
					<li><os:githubLink issue="676" /><h:link outcome="/resourcehandlers/VersionedResourceHandler"><code>VersionedResourceHandler</code></h:link> remapped resource was not <code>Externalizable</code></li>
					<li><os:githubLink issue="680" />The <code>CloneCopier</code> of <h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> should have invoked <code>Method#canAccess()</code> instead of <code>Method#isAccessible()</code></li>
					<li><os:githubLink issue="677" /><h:link outcome="/el/ExpressionInspector"><code>ExpressionInspector#getMethodReference()</code></h:link> failed with <code>ClassCastException</code> when inspecting a <code>MethodExpressionValueExpressionAdapter</code></li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_17');return false;">Remaining fixes are same as in 2.7.17</a></li>
				</ul>

				<hr />

				<h2 id="3_13">What's new in OmniFaces 3.13?</h2>
				<p><em>Release date: 22 January, 2022</em></p>

				<h3>Added in OmniFaces 3.13</h3>
				<ul>
					<li><os:githubLink issue="663" /><h:link outcome="/utils/Faces"><code>Faces#isRequestedSessionExpired()</code></h:link> which returns <code>true</code> when a session ID has been requested but it is expired</li>
				</ul>

				<h3>Changed in OmniFaces 3.13</h3>
				<ul>
					<li><os:githubLink issue="660" />Scripts and stylesheets generated by <h:link outcome="/components/deferredScript"><code>&lt;o:deferredScript&gt;</code></h:link> and <h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> have now by default an <code>integrity</code> attribute with an automatically calculated SRI hash when the <code>crossorigin</code> attribute equals or defaults to <code>anonymous</code></li>
					<li><os:githubLink issue="662" /><h:link outcome="/validators/validateAll"><code>&lt;o:validate*&gt;</code></h:link> <code>components</code> attribute now supports referencing a parent component having UIInput children instead of all of those individual UIInput children</li>
				</ul>

				<h3>Fixed in OmniFaces 3.13</h3>
				<ul>
					<li><os:githubLink issue="659" />The <code>CloneCopier</code> of <h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> will not anymore explicitly call <code>Method#setAccessible()</code> via reflection (and therefore not anymore be prone to throw <code>IllegalStateException</code> in Java 16+)</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_15');return false;">Remaining fixes are same as in 2.7.15</a></li>
				</ul>

				<hr />

				<h2 id="3_12">What's new in OmniFaces 3.12?</h2>
				<p><em>Release date: 15 November, 2021</em></p>

				<h3>Added in OmniFaces 3.12</h3>
				<ul>
					<li><os:githubLink issue="654" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> got a new attribute <code>messageFormat</code> which allows you to override the default message format of <i>label: message</i> on a per-tag basis</li>
				</ul>

				<h3>Fixed in OmniFaces 3.12</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_14');return false;">All fixes are same as in 2.7.14</a></li>
				</ul>

				<hr />

				<h2 id="3_11_2">What's new in OmniFaces 3.11.2?</h2>
				<p><em>Release date: 15 October, 2021</em></p>

				<h3>Fixed in OmniFaces 3.11.2</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_13');return false;">All fixes are same as in 2.7.13</a></li>
				</ul>

				<hr />

				<h2 id="3_11_1">What's new in OmniFaces 3.11.1?</h2>
				<p><em>Release date: 5 June, 2021</em></p>

				<h3>Fixed in OmniFaces 3.11.1</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_12');return false;">All fixes are same as in 2.7.12</a></li>
				</ul>

				<hr />

				<h2 id="3_11">What's new in OmniFaces 3.11?</h2>
				<p><em>Release date: 4 April, 2021</em></p>

				<h3>Added in OmniFaces 3.11</h3>
				<ul>
					<li><os:githubLink issue="622" /><h:link outcome="/utils/Components"><code>Components#findClosestParent()</code></h:link> which returns an <code>Optional</code></li>
				</ul>

				<h3>Changed in OmniFaces 3.11</h3>
				<ul>
					<li><os:githubLink issue="613" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> will now explicitly exclude <code>media="print"</code> stylesheets</li>
					<li><os:githubLink issue="620" /><h:link outcome="/filters/GzipResponseFilter"><code>GzipResponseFilter</code></h:link> will now by default also recognize <code>application/x-javascript</code> resources</li>
				</ul>

				<h3>Fixed in OmniFaces 3.11</h3>
				<ul>
					<li><os:githubLink issue="624" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> failed to perform bean validation on a targeted/proxied instance</li>
					<li><os:githubLink issue="625" /><h:link outcome="/utils/Components"><code>Components#getMessageComponent()</code></h:link> didn't utilize JSF 2.3 search expression framework</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_11');return false;">Remaining fixes are same as in 2.7.11</a></li>
				</ul>

				<hr />

				<h2 id="3_10_1">What's new in OmniFaces 3.10.1?</h2>
				<p><em>Release date: 24 January, 2021</em></p>

				<h3>Fixed in OmniFaces 3.10.1</h3>
				<ul>
					<li><os:githubLink commit="e2246c0" /><h:link outcome="/components/graphicImage"><code>&lt;o:graphicImage&gt;</code></h:link> <code>dataURI="true"</code> didn't work due to a typo introduced in 3.10</li>
				</ul>

				<hr />

				<h2 id="3_10">What's new in OmniFaces 3.10?</h2>
				<p><em>Release date: 24 January, 2021</em></p>

				<h3>Added in OmniFaces 3.10</h3>
				<ul>
					<li><os:githubLink issue="584" /><h:link outcome="/resourcehandlers/ViewResourceHandler"><code>ViewResourceHandler</code></h:link> which enables using JSF components and EL expressions in non-Facelets files such as <code>/sitemap.xml</code> and <code>/robots.txt</code></li>
					<li><os:githubLink issue="584" /><h:link outcome="/components/sitemapUrl"><code>&lt;o:sitemapUrl&gt;</code></h:link> to generate a <code>&lt;url&gt;</code> element in <code>&lt;urlset&gt;</code> of <code>/sitemap.xml</code></li>
					<li><os:githubLink issue="584" /><h:link outcome="/utils/Servlets"><code>Servlets#getContext()</code></h:link> to obtain the current <code>ServletContext</code> via <code>FacesContext</code> with fallback to <code>BeanManager</code></li>
					<li><os:githubLink issue="584" /><h:link outcome="/utils/FacesConfigXml"><code>FacesConfigXml#getResourceHandlers()</code></h:link> to obtain a list of all registered <code>&lt;application&gt;&lt;resource-handler&gt;</code> entries</li>
					<li><os:githubLink issue="602" /><h:link outcome="/utils/Exceptions"><code>Exceptions#extract()</code></h:link> to extract the specified nested cause from the given exception</li>
					<li><os:githubLink issue="222" /><h:link outcome="/components/graphicImage"><code>&lt;o:graphicImage&gt;</code></h:link> now supports lazy images via new <code>lazy="true"</code> attribute</li>
					<li><os:githubLink issue="605" /><h:link outcome="/functions/Converters"><code>of:convert()</code></h:link> EL function to convert given object using <code>Converter#getAsString()</code> of an existing JSF converter</li>
					<li><os:githubLink issue="606" /><h:link outcome="/utils/Faces"><code>Faces#getRequestParameter()</code></h:link> got two new overloads taking a <code>Function&lt;String, T&gt;</code> as converter</li>
					<li><os:githubLink issue="607" /><h:link outcome="/utils/Faces"><code>Faces#getReferrer()</code></h:link> and <h:link outcome="/utils/Servlets"><code>Servlets#getReferrer()</code></h:link> to obtain the <code>Referer</code> header from the request</li>
				</ul>

				<h3>Changed in OmniFaces 3.10</h3>
				<ul>
					<li><os:githubLink issue="261" /><h:link outcome="/taghandlers/massAttribute"><code>&lt;o:massAttribute&gt;</code></h:link> <code>target</code> will now accept a commaseparated string of FQNs</li>
					<li><os:githubLink commit="65d6c3a,33a294a" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> <code>ResourceResolver</code> has been migrated to <code>ResourceHandler</code> as the <code>ResourceResolver</code> approach was long deprecated since JSF 2.2</li>
				</ul>

				<h3>Fixed in OmniFaces 3.10</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_10');return false;">Fixes are same as in 2.7.10</a></li>
				</ul>

				<hr />

				<h2 id="3_9">What's new in OmniFaces 3.9?</h2>
				<p><em>Release date: 19 December, 2020</em></p>

				<h3>Added in OmniFaces 3.9</h3>
				<ul>
					<li><os:githubLink issue="580" /><h:link outcome="/utils/Faces"><code>Faces#sendFile()</code></h:link> got new overload methods accepting <code>java.nio.file.Path</code> instead of <code>java.io.File</code>, and now also allows overriding the file name instead of relying on the one of <code>Path</code> or <code>File</code></li>
					<li><os:githubLink issue="581" /><h:link outcome="/utils/JNDIObjectLocator"><code>JNDIObjectLocator</code></h:link> which minimizes the overhead of JNDI lookups by caching the objects it looks up</li>
					<li><os:githubLink issue="586" /><h:link outcome="/resourcehandlers/VersionedResourceHandler"><code>VersionedResourceHandler</code></h:link> which automatically adds a <code>v</code> cache bust query string parameter if absent</li>
					<li><os:githubLink commit="e954e5b" /><h:link outcome="/exceptionhandlers/ViewExpiredExceptionHandler"><code>ViewExpiredExceptionHandler</code></h:link> which completely suppresses <code>ViewExpiredException</code> and sets a flag in flash scope</li>
					<li><os:githubLink commit="a0ae2e6" /><h:link outcome="/utils/WebXml"><code>WebXml#isDistributable()</code></h:link> which returns true if <code>&lt;distributable&gt;</code> flag is set in <code>web.xml</code></li>
					<li><os:githubLink issue="593" /><h:link outcome="/exceptionhandlers/ExceptionSuppressor"><code>ExceptionSuppressor</code></h:link> to completely suppress (and thus not log) specific exceptions by simply refreshing the current page, such as inevitable I/O errors caused by <code>java.nio.channels.ClosedByInterruptException</code></li>
				</ul>

				<h3>Fixed in OmniFaces 3.9</h3>
				<ul>
					<li><os:githubLink issue="598" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> was over-recursive, it will now only recurse into nested entities which are explicitly annotated with <code>@Valid</code></li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_9');return false;">Remaining fixes are same as in 2.7.9</a></li>
				</ul>

				<hr />

				<h2 id="3_8_1">What's new in OmniFaces 3.8.1?</h2>
				<p><em>Release date: 25 October, 2020</em></p>

				<h3>Fixed in OmniFaces 3.8.1</h3>
				<ul>
					<li><os:githubLink issue="577" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> failed validating nested properties when model has a <code>java.util.Calendar</code> property</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_8');return false;">Remaining fixes are same as in 2.7.8</a></li>
				</ul>

				<hr />

				<h2 id="3_8">What's new in OmniFaces 3.8?</h2>
				<p><em>Release date: 12 September, 2020</em></p>

				<h3>Added in OmniFaces 3.8</h3>
				<ul>
					<li><os:githubLink issue="569" /><h:link outcome="/functions/Strings"><code>of:encodeBase64()</code></h:link> to Base64-encode strings in EL, e.g. for data URIs</li>
					<li><os:githubLink issue="247" /><h:link outcome="/utils/Beans"><code>Beans#isProxy/unwrapIfNecessary()</code></h:link> utility methods to check if a given object is a CDI proxy, and to unwrap it if necessary</li>
					<li><os:githubLink issue="574" /><h:link outcome="/utils/Components"><code>Components#getExpectedType/getExpectedValueType()</code></h:link> utility methods to return the expected type of the <code>value</code> attribute of the given <code>UIComponent</code>, or a given <code>ValueExpression</code></li>
					<li><os:githubLink commit="ef3b15d" /><h:link outcome="/utils/Messages"><code>Messages#asConverterException/asValidatorException()</code></h:link> utility methods to obtain the so far created faces message as a <code>ConverterException</code> or <code>ValidatorException</code>, so these can be thrown directly</li>
				</ul>

				<h3>Changed in OmniFaces 3.8</h3>
				<ul>
					<li><os:githubLink issue="247" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> will now (finally) automatically validate nested entities as well, simply put <code>@Valid</code> on them</li>
					<li><os:githubLink issue="574" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> will now simulate a <code>ValueExpression</code> on the component passed into converter/validator so that any generic target type can be extracted from there</li>
				</ul>

				<h3>Fixed in OmniFaces 3.8</h3>
				<ul>
					<li><os:githubLink issue="568" /><h:link outcome="/filters/FacesExceptionFilter"><code>FacesExceptionFilter</code></h:link> logged the wrong error page location when the exception was wrapped in a <code>ServletException</code></li>
					<li><os:githubLink issue="572" /><h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link>/<h:link outcome="/cdi/FacesValidator"><code>@FacesValidator</code></h:link> didn't properly support <code>@ResourceDependency</code> annotations declared on them</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_7');return false;">Remaining fixes are same as in 2.7.7</a></li>
				</ul>

				<hr />

				<h2 id="3_7_1">What's new in OmniFaces 3.7.1?</h2>
				<p><em>Release date: 12 July, 2020</em></p>

				<h3>Fixed in OmniFaces 3.7.1</h3>
				<ul>
					<li><os:githubLink issue="562" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>sw.js</code> generated by <code>PWAResourceHandler</code></h:link> turned out to perform horribly on showcase site after release; performance improvements have been made</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.7?</h2>
				<p><em>Release date: 12 July, 2020</em></p>

				<h3>Added in OmniFaces 3.7</h3>
				<ul>
					<li><os:githubLink issue="532" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>PWAResourceHandler</code></h:link> to autogenerate offline-aware <code>sw.js</code> file</li>
					<li><os:githubLink issue="553" /><h:link outcome="/components/inputHidden"><code>o:inputHidden</code></h:link> which always immediately performs the conversion, validation and update of model during the apply request values phase</li>
					<li><os:githubLink issue="561" /><h:link outcome="/functions/Strings"><code>of:stripTags()</code></h:link> to remove any XML tags from a string</li>
				</ul>

				<h3>Changed in OmniFaces 3.7</h3>
				<ul>
					<li><os:githubLink issue="532" /><code>WebAppManifestResourceHandler</code> has been renamed to <h:link outcome="/resourcehandlers/PWAResourceHandler"><code>PWAResourceHandler</code></h:link></li>
					<li><os:githubLink issue="556" /><h:link outcome="/utils/WebXml"><code>WebXml#instance()</code></h:link> will now also recognize non-standard location <code>META-INF/web.xml</code>, as used by among others Quarkus.</li>
				</ul>

				<h3>Fixed in OmniFaces 3.7</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_6');return false;">Fixes are same as in 2.7.6</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.6.1?</h2>
				<p><em>Release date: 22 May, 2020</em></p>

				<h3>Fixed in OmniFaces 3.6.1</h3>
				<ul>
					<li><os:githubLink issue="553" /><h:link outcome="/components/tree"><code>&lt;o:tree&gt;</code></h:link> caused stack overflow error when OmniFaces <code>@ViewScoped</code> is created for first time during tree rendering</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.6?</h2>
				<p><em>Release date: 3 May, 2020</em></p>

				<h3>Added in OmniFaces 3.6</h3>
				<ul>
					<li><os:githubLink commit="f638cec" /><h:link outcome="/utils/Faces"><code>Faces#createResource()</code></h:link> to create new <code>Resource</code> instances</li>
					<li><os:githubLink issue="532" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>WebAppManifestResourceHandler</code></h:link> to autogenerate <code>manifest.json</code> file</li>
					<li><os:githubLink commit="1455246" /><h:link outcome="/utils/Servlets"><code>Servlets#isProxied()</code></h:link> which checks if <code>Forwarded</code> header or <code>X-Forwarded-For</code> is present</li>
					<li><os:githubLink issue="471" /><h:link outcome="/components/pathParam"><code>&lt;o:pathParam&gt;</code></h:link> to support path params in links pointing to a <code>MultiViews</code> resource</li>
					<li><os:githubLink commit="145eee6" /><h:link outcome="/components/scriptParam"><code>&lt;o:scriptParam&gt;</code></h:link> to inject evaluated JavaScript code in backing bean</li>
					<li><os:githubLink commit="a4cd6db" /><h:link outcome="/utils/Ajax"><code>Ajax#isExecuted()</code></h:link> to check if given client ID is covered by <code>&lt;f:ajax execute&gt;</code></li>
					<li><os:githubLink commit="ca6659e" /><h:link outcome="/utils/Components"><code>Components#addScript/addScriptResource()</code></h:link> to add an inline script or script resource without the need to worry if the current request is an ajax request or if the render response phase is already running</li>
				</ul>

				<h3>Changed in OmniFaces 3.6</h3>
				<ul>
					<li><os:githubLink commit="1455246" /><h:link outcome="/utils/Faces"><code>Faces/FacesLocal/Servlets#getRemoteAddr()</code></h:link> now also checks <code>Forwarded</code> header instead of only <code>X-Forwarded-For</code></li>
					<li><os:githubLink issue="548" /><h:link outcome="/functions/Dates"><code>of:formatDateXxx()</code></h:link> methods now also support <code>java.time.Temporal</code> instances</li>
					<li><os:githubLink issue="546" /><h:link outcome="/managedbeans/now"><code>#{now}</code></h:link> and <h:link outcome="/managedbeans/startup"><code>#{startup}</code></h:link> are now produced by CDI instead of JSF</li>
					<li><os:githubLink issue="497" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> now supports defaulting to argument name in constructor injection</li>
					<li><os:githubLink issue="550" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> now doesn't anymore require <code>@Inject</code></li>
					<li><os:githubLink commit="ca6659e" /><h:link outcome="/utils/Components"><code>Components#addScriptToBody /addScriptResourceToHead /addScriptResourceToBody()</code></h:link> are now <code>@Deprecated</code> in favor of <code>Components#addScript/addScriptResource()</code></li>
				</ul>

				<h3>Fixed in OmniFaces 3.6</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_5');return false;">Fixes are same as in 2.7.5</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.5?</h2>
				<p><em>Release date: 12 April, 2020</em></p>

				<h3>Added in OmniFaces 3.5</h3>
				<ul>
					<li><os:githubLink issue="541" /><h:link outcome="/functions/Strings"><code>\#{of:encodeURI()}</code></h:link> little brother of <code>\#{of:encodeURL()}</code></li>
					<li><os:githubLink issue="537" /><code>crossorigin</code> attribute of <h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link>  is now configureable</li>
					<li><os:githubLink issue="544" /><h:link outcome="/utils/Messages"><code>Messages#clearXxx()</code></h:link> to programmatically clear out faces messages</li>
					<li><os:githubLink issue="545" /><h:link outcome="/utils/Messages"><code>Messages#throwXxx()</code></h:link> convenience methods to replace <code>throw new ConverterException(Messages.createError("..."))</code></li>
				</ul>

				<h3>Fixed in OmniFaces 3.5</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_4');return false;">Fixes are same as in 2.7.4</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.4.1?</h2>
				<p><em>Release date: 30 November, 2019</em></p>

				<h3>Fixed in OmniFaces 3.4.1</h3>
				<ul>
					<li><os:githubLink issue="522" /><h:link outcome="/utils/WebXml"><code>WebXml#instance()</code></h:link> didn't work during startup (e.g. <code>ServletContextListener</code>, <code>@Observes @Initialized(ApplicationScoped.class)</code>, etc)</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_3');return false;">Remaining fixes are same as in 2.7.3</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.4?</h2>
				<p><em>Release date: 27 October, 2019</em></p>

				<h3>Added in OmniFaces 3.4</h3>
				<ul>
					<li><os:githubLink issue="512" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> got a new attribute <code>onerror</code></li>
				</ul>

				<h3>Fixed in OmniFaces 3.4</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_2');return false;">Fixes are same as in 2.7.2</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.3?</h2>
				<p><em>Release date: 5 May, 2019</em></p>

				<h3>Added in OmniFaces 3.3</h3>
				<ul>
					<li><os:githubLink issue="507" /><h:link outcome="/utils/Faces"><code>Faces#addResponseCookie()</code></h:link> got an overload which supports overridding the <code>HttpOnly</code> flag</li>
					<li><os:githubLink issue="505" /><h:link outcome="/components/cache"><code>&lt;o:cache&gt;</code></h:link> interface now supports a <code>clear()</code> method</li>
					<li><os:githubLink issue="504" />Application startup will explicitly fail when duplicate <code>ResourceHandler</code> instances are registered, which can only indicate a misconfiguration</li>
				</ul>

				<h3>Changed in OmniFaces 3.3</h3>
				<ul>
					<li><os:githubLink issue="472" /><h:link outcome="/cdi/ContextParam"><code>@ContextParam</code></h:link> and <h:link outcome="/cdi/Cookie"><code>@Cookie</code></h:link> can now also be used outside <code>FacesContext</code> (e.g. in a plain servlet/filter)</li>
					<li><os:githubLink issue="494" /><h:link outcome="/push/socket" fragment="cluster"><code>&lt;o:socket&gt;</code></h:link> documentation has been improved with cluster design hints</li>
				</ul>

				<h3>Fixed in OmniFaces 3.3</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7_1');return false;">Fixes are same as in 2.7.1</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.2?</h2>
				<p><em>Release date: 29 July, 2018</em></p>

				<h3>Added in OmniFaces 3.2</h3>
				<ul>
					<li><os:githubLink commit="b2796b8" /><h:link outcome="/components/hashParam"><code>&lt;o:hashParam&gt;</code></h:link> has been added which is similar to <code>&lt;o:viewParam&gt;</code> but then for hash parameters like <code>/page.xhtml#foo=bar&amp;baz=kaz</code> instead of query parameters</li>
					<li><os:githubLink commit="b2796b8" /><h:link outcome="/utils/Faces"><code>Faces#getHashParameters()</code>, <code>Faces#getHashParameterMap()</code> and <code>Faces#getHashQueryString()</code></h:link> which extracts information from hash parameters managed by <code>&lt;o:hashParam&gt;</code></li>
					<li><os:githubLink issue="461" />New <h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CDNResource</code></h:link> marker class which allows <code>CombinedResourceHandler</code> generating a fallback local URL</li>
					<li><os:githubLink issue="469" /><h:link outcome="/components/viewAction"><code>&lt;o:viewAction&gt;</code></h:link> now supports adding a faces message to the redirected page via new <code>message</code> attribute</li>
					<li><os:githubLink issue="477" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> and <h:link outcome="/filters/FacesExceptionFilter"><code>FacesExceptionFilter</code></h:link> will from now on also log an UUID and IP address for easier log analysis</li>
					<li><os:githubLink commit="ef920bb" /><h:link outcome="/utils/Faces"><code>Faces#getUserAgent()</code></h:link> has been added</li>
				</ul>

				<h3>Changed in OmniFaces 3.2</h3>
				<ul>
					<li><os:githubLink issue="472" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> now supports dynamic changes in <code>user</code> attribute without the need to refresh the page</li>
				</ul>

				<h3>Fixed in OmniFaces 3.2</h3>
				<ul>
					<li><os:githubLink issue="445" /><h:link outcome="/utils/Components"><code>Components#getParams()</code></h:link> wasn't correctly parameterized</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_7');return false;">Remaining fixes are same as in 2.7</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.1?</h2>
				<p><em>Release date: 12 April, 2018</em></p>

				<h3>Added in OmniFaces 3.1</h3>
				<ul>
					<li><os:githubLink issue="431" /><h:link outcome="/utils/Components"><code>Components#findComponentsInCurrentForm()</code></h:link> to find components of given type in currently submitted form</li>
					<li><os:githubLink commit="8080151" /><h:link outcome="/utils/Faces"><code>Faces/FacesLocal#getInitParameterOrDefault()</code></h:link> which returns given default value when the init parameter is absent</li>
					<li><os:githubLink issue="430" /><h:link outcome="/resourcehandlers/SourceMapResourceHandler"><code>SourceMapResourceHandler</code></h:link> in order to automatically set the correct <code>SourceMap</code> response header on CSS/JS resources</li>
					<li><os:githubLink commit="c04e0eb" /><h:link outcome="/utils/Faces"><code>Faces/FacesLocal#getContextAttribute()</code></h:link> got an overload which takes a new argument representing the supplier which will be computed in case the attribute is absent</li>
					<li><os:githubLink commit="2123aa7" /><h:link outcome="/utils/Beans"><code>Beans/BeansLocal#resolveExact()</code></h:link> which will ignore any subclasses when resolving the given class</li>
					<li><os:githubLink commit="d1f1428" /><h:link outcome="/cdi/ViewScoped"><code>ViewScopeManager#isUnloadRequest()</code></h:link> for easier checking in a servlet filter whether current request is an unload request</li>
					<li><os:githubLink commit="dd08730" /><h:link outcome="/search/MessagesKeywordResolver"><code>MessagesKeywordResolver</code></h:link> so that you can use <code>@messages</code> in ajax render/update to reference only <code>UIMessage(s)</code> components</li>
				</ul>

				<h3>Changed in OmniFaces 3.1</h3>
				<ul>
					<li><os:githubLink issue="441" /><h:link outcome="/utils/FacesConfigXml"><code>FacesConfigXml</code></h:link> and <h:link outcome="/utils/WebXml"><code>WebXml</code></h:link> are now interfaces with an enum implementation which should allow easier mocking during unit testing, hereby the <code>INSTANCE</code> constant has been <strong>deprecated</strong> and is replaced by <code>instance()</code> method</li>
				</ul>

				<h3>Fixed in OmniFaces 3.1</h3>
				<ul>
					<li><os:githubLink issue="437" /><h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link>/<h:link outcome="/cdi/FacesValidator"><code>@FacesValidator</code></h:link> didn't support custom attributes via <h:link outcome="/taghandlers/converter"><code>&lt;o:converter&gt;</code></h:link> anymore since JSF 2.3</li>
					<li><os:githubLink issue="438" /><h:link outcome="/components/param"><code>&lt;o:param&gt;</code></h:link> with <code>converter</code> threw <code>ClassCastException</code> due to an bug in javac7</li>
					<li><os:githubLink issue="439" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> will not anymore infintely keep retrying to push the message on Tomcat when the server fails do deliver the message due to its internal design flaw</li>
					<li><os:githubLink issue="443" /><h:link outcome="/converters/ValueChangeConverter"><code>ValueChangeConverter</code></h:link> class was incorrectly parameterized and caused compile error when extended by an already parameterized converter</li>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_6_9');return false;">Remaining fixes are same as in 2.6.9</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 3.0?</h2>
				<p><em>Release date: 3 January, 2018</em></p>

				<h3>Major in OmniFaces 3.0</h3>
				<ul class="important">
					<li>Dependencies are changed from Java 1.7, JSF 2.2, EL 2.2, Servlet 3.0, CDI 1.1 and BV 1.1 to <strong>Java 1.8, JSF 2.3, EL 3.0, Servlet 3.1, CDI 2.0 and BV 2.0</strong>;
						as of now, OmniFaces 3.0 is still backwards compatible with EL 2.2, CDI 1.1 and BV 1.1, but that may change when new features are utilized</li>
					<li>OmniFaces initialization will explicitly <a href="https://omnifaces.org/cdi">fail</a> if CDI <code>BeanManager</code> is unavailable during application startup</li>
		            <li><os:githubLink issue="388" /><h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link> now defaults to <code>useRequestURI="true"</code></li>
		            <li><os:githubLink issue="394" /><h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link> now defaults to <code>partialSubmit="true"</code></li>
					<li><os:githubLink issue="352" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean showMessageFor="@violating"&gt;</code></h:link> will not anymore show "remaining" messages for properties which are not coverred by JSF form</li>
					<li><os:githubLink issue="411" /><h:link outcome="/validators/validateAll"><code>ValidateMultipleFields</code></h:link> will not anymore skip readonly/disabled/unrendered components but instead supply their current model value</li>
					<li><os:githubLink commit="e2a3f25" /><code>org.omnifaces.component.output.cache</code> package has been moved to <code>org.omnifaces.util.cache</code> as it's reusable for non-component caches (it's internally also used by <code>CombinedResourceHandler</code>)</li>
					<li><os:githubLink issue="338" />All <h:link outcome="/utils/Faces"><code>Faces/FacesLocal</code></h:link> and <h:link outcome="/utils/Servlets"><code>Servlets</code></h:link> utility methods which previously threw <code>IOException</code> will now throw <code>UncheckedIOException</code> instead</li>
					<li><os:githubLink commit="8b3899b" />All in 2.x <code>@Deprecated</code> things have been removed, such as <code>org.omnifaces.config.BeanManager</code> (replaced by <code>Beans</code>) and <code>org.omnifaces.renderkit.Html5RenderKit</code> (replaced by JSF 2.2 native passthrough attributes)</li>
					<li><os:githubLink issue="404" />All RichFaces-specific hacks have been removed as RichFaces was declared End Of Life at June 2016 and doesn't have a JSF 2.3 compatible version; OmniFaces 3.0 is therefore also not anymore RichFaces compatible</li>
				</ul>

				<h3>Added in OmniFaces 3.0</h3>
				<ul>
		            <li><os:githubLink issue="394" /><h:link outcome="/components/selectItemGroups"><code>&lt;o:selectItemGroups&gt;</code></h:link> to represent <code>&lt;optgroup&gt;</code></li>
		            <li><os:githubLink issue="416" /><h:link outcome="/components/url"><code>&lt;o:url&gt;</code></h:link> has been extended with a value attribute which can take an arbitrary/external URL</li>
		            <li><os:githubLink issue="387" /><h:link outcome="/converters/ImplicitNumberConverter"><code>ImplicitNumberConverter</code></h:link> which extends <code>&lt;f:convertNumber&gt;</code>, but doesn't annoyingly require enduser to explicitly input the percent or currency symbol when using <code>type="percent"</code> or <code>type="currency"</code>.</li>
		            <li><os:githubLink commit="b7fef76" /><h:link outcome="/eventlisteners/FacesRequestLogger"><code>FacesRequestLogger</code></h:link> to print detailed logs of JSF requests, including request method/URI/params, session/viewstate ID, remote user, action method expressions, faces messages and phase timings</li>
		            <li><os:githubLink commit="7d1bf0d" /><h:link outcome="/utils/Faces"><code>Faces#getRequest/Flash/View/Session/ApplicationAttribute()</code></h:link> got an overload which takes a new argument representing the supplier which will be computed in case the attribute is absent</li>
		            <li><os:githubLink issue="407" /><h:link outcome="/utils/Faces"><code>Faces#isRequestSecure()</code></h:link> which also checks the de-facto <code>X-Forwarded-Proto</code> header</li>
		            <li><os:githubLink issue="381" /><h:link outcome="/functions/Objects"><code>\#{of:isInstance('com.example.ClassName', object)}</code></h:link> to act as <code>instanceof</code> in EL</li>
		            <li><os:githubLink issue="406" /><h:link outcome="/functions/Strings"><code>\#{of:parenthesize(object)}</code></h:link> which will print parenthesis around the given object only and only if it isn't null nor empty nor equals zero, else print nothing</li>
		            <li><os:githubLink issue="374" /><h:link outcome="/viewhandlers/NoAutoGeneratedIdViewHandler"><code>NoAutoGeneratedIdViewHandler</code></h:link> will now also recognize <code>prependId="false"</code> and log a warning because this is bad practice</li>
				</ul>

				<h3>Changed in OmniFaces 3.0</h3>
				<ul>
		            <li><os:githubLink commit="e2d03d9,feae34a,4d3d123,236e93b,c275dea,8284ffb" />Under the covers, many things are replaced by new JSF 2.3 API things and also Java8 lambdas and streams have been introduced where possible</li>
					<li><os:githubLink issue="268" /><code>&lt;o:commandScript&gt;</code> has been <strong>deprecated</strong> as it's now moved into JSF 2.3 as <code><a href="https://javaserverfaces.github.io/docs/2.3/vdldocs/facelets/h/commandScript.html">&lt;h:commandScript&gt;</a></code> with exactly the same functionality</li>
					<li><os:githubLink issue="267" /><code>omnifaces:fixviewstate.js</code> has been <strong>deprecated</strong> as it's now finally solved in JSF 2.3 (by yours truly)</li>
		            <li><os:githubLink issue="388" /><code>includeViewParams="true"</code> attribute of <h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link> have been <strong>deprecated</strong> as those have never proven to be more useful than <code>useRequestURI="true"</code> or <code>includeRequestParams="true"</code></li>
				</ul>

				<h3>Fixed in OmniFaces 3.0</h3>
				<ul>
					<li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_2_6_8');return false;">Fixes are same as in 2.6.8</a></li>
				</ul>
			</p:tab>

			<p:tab id="v2" title="2.x">
				<h2>What's new in OmniFaces 2.7.20?</h2>
				<p><em>Release date: ? October, 2022</em></p>

				<h3 id="fixed_2_7_20">Fixed in OmniFaces 2.7.20</h3>
				<ul>
					<li><os:githubLink issue="705" /><h:link outcome="/utils/Ajax"><code>Ajax#updateRow/updateColumn()</code></h:link> fix of previous version failed when direct parent of table is not a <code>NamingContainer</code></li>
					<li><os:githubLink issue="713" /><h:link outcome="/converters/SelectItemsIndexConverter"><code>SelectItemsIndexConverter</code></h:link> failed to convert the items to string when the list is changed during invoke application phase of a postback</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.19?</h2>
				<p><em>Release date: 14 August, 2022</em></p>

				<h3 id="fixed_2_7_19">Fixed in OmniFaces 2.7.19</h3>
				<ul>
					<li><os:githubLink issue="694,697" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> welcome file was not properly picked up when placed in a subfolder</li>
					<li><os:githubLink issue="692" /><h:link outcome="/utils/Ajax"><code>Ajax#updateRow/updateColumn()</code></h:link> caused malformedXML error when column has <code>rendered=false</code></li>
					<li><os:githubLink issue="693" /><h:link outcome="/utils/Beans"><code>Beans#getManager()</code></h:link> will fall back to <code>java:comp/env</code> when <code>java:comp</code> isn't available (e.g. Tomcat)</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.18?</h2>
				<p><em>Release date: 14 May, 2022</em></p>

				<h3 id="fixed_2_7_18">Fixed in OmniFaces 2.7.18</h3>
				<ul>
					<li><os:githubLink issue="687" /><h:link outcome="/taghandlers/importConstants"><code>&lt;o:importConstants&gt;</code></h:link> fix done in 2.7.17 bugged on interface constants</li>
					<li><os:githubLink issue="688" /><code>RemappedResource</code> name/library was not mutable (used by among others <h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code></h:link> since 1.4 and <h:link outcome="/resourcehandlers/VersionedResourceHandler"><code>VersionedResourceHandler</code></h:link> since 3.9)</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.17?</h2>
				<p><em>Release date: 1 May, 2022</em></p>
				<p>Note: 2.7.16 was accidentally released with a bug in backported <code>&lt;o:importConstants&gt;</code>, do NOT use it!</p>

				<h3 id="fixed_2_7_17">Fixed in OmniFaces 2.7.17</h3>
				<ul>
					<li><os:githubLink issue="688" /><h:link outcome="/components/viewParam"><code>&lt;o:viewParam&gt;</code></h:link> <code>default</code> value should not end up in bookmarkable URL</li>
					<li><os:githubLink issue="672" /><h:link outcome="/taghandlers/importConstants"><code>&lt;o:importConstants&gt;</code></h:link> should not expose shadowed constants from superclasses or interfaces</li>
					<li><os:githubLink issue="685" /><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code></h:link> threw NPE when a folder was requested (by e.g. a searchbot)</li>
					<li><os:githubLink issue="651" /><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code></h:link> should strip off wrong <code>FacesServlet</code> prefix mapping when <h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> is used</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.15?</h2>
				<p><em>Release date: 22 January, 2022</em></p>

				<h3 id="fixed_2_7_15">Fixed in OmniFaces 2.7.15</h3>
				<ul>
					<li><os:githubLink issue="661" /><h:link outcome="/components/inputFile"><code>&lt;o:inputFile&gt;</code></h:link> <code>accept</code> attribute validation failed when mime type contained a '+' character such as "image/svg+xml"</li>
					<li><os:githubLink issue="664" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> missed stylesheets in JSF 2.3 when exception was triggered by PrimeFaces Ajax tag nested in a standard Faces UICommand component</li>
					<li><os:githubLink issue="665" /><h:link outcome="/utils/Servlets"><code>Servlets#toParameterMap()</code></h:link> (also used internally by among others <h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link>) threw ArrayIndexOutOfBoundsException on <code>/someurl?=</code> (so, query string having a param without name as well as value)</li>
					<li><os:githubLink issue="657" /><h:link outcome="/components/inputFile"><code>&lt;o:inputFile&gt;</code></h:link> <code>multiple="true" maxsize="..."</code> uploading too big size threw NPE when <code>javax.faces.VALIDATE_EMPTY_FIELDS</code> or <code>javax.faces.ALWAYS_PERFORM_VALIDATION_WHEN_REQUIRED_IS_TRUE</code> is set to <code>true</code></li>
					<li><os:githubLink issue="653" /><h:link outcome="/viewhandlers/OmniViewHandler"><code>NestedFormsChecker</code></h:link> will now not anymore perform a tree visit but a simple children traversal</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.14?</h2>
				<p><em>Release date: 15 November, 2021</em></p>

				<h3 id="fixed_2_7_14">Fixed in OmniFaces 2.7.14</h3>
				<ul>
					<li><os:githubLink issue="646" /><h:link outcome="/el/ExpressionInspector"><code>ExpressionInspector#getMethodReference()</code></h:link> failed since Tomcat 9.0.54 due to an internal change in its EL impl</li>
					<li><os:githubLink issue="649" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> threw NPE instead of 404 error in MyFaces for a non-existent view</li>
					<li><os:githubLink issue="634" /><h:link outcome="/utils/FacesConfigXml"><code>FacesConfigXml</code></h:link> error reporting has been improved to include exact location of any unparseable <code>faces-config.xml</code></li>
					<li><os:githubLink issue="650" /><h:link outcome="/utils/Components"><code>Components#getActionExpressionsAndListeners()</code></h:link> didn't return the desired expression string in case of <code>actionListener</code>; this will improve logging of <h:link outcome="/eventlisteners/FacesRequestLogger"><code>FacesRequestLogger</code></h:link> on them</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.13?</h2>
				<p><em>Release date: 15 October, 2021</em></p>

				<h3 id="fixed_2_7_13">Fixed in OmniFaces 2.7.13</h3>
				<ul>
					<li><os:githubLink issue="640" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> threw intermittent NPE in MyFaces 2.2</li>
					<li><os:githubLink issue="644" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> threw NPE when Ajax exception is thrown during view build time during render response phase</li>
					<li><os:githubLink issue="645" /><h:link outcome="/viewhandlers/NoAutoGeneratedIdViewHandler"><code>NoAutoGeneratedIdViewHandler</code></h:link> incorrectly logged component type <code>&lt;null&gt;</code> on components nested in <code>UIData/UIRepeat</code></li>
					<li><os:githubLink issue="645" /><h:link outcome="/viewhandlers/NoAutoGeneratedIdViewHandler"><code>NoAutoGeneratedIdViewHandler</code></h:link> has been adjusted to not anymore throw ISE when component couldn't be resolved, instead it logs a warning</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.12?</h2>
				<p><em>Release date: 5 June, 2021</em></p>

				<h3 id="fixed_2_7_12">Fixed in OmniFaces 2.7.12</h3>
				<ul>
					<li><os:githubLink commit="3f87300" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> "excluded pages" failed in OpenLiberty</li>
					<li><os:githubLink commit="fbdfe7d" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> welcome file path info was missing in OpenLiberty</li>
					<li><os:githubLink issue="627,630" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> missed stylesheets in JSF 2.3 when exception was triggered by PrimeFaces Ajax instead of standard Faces Ajax</li>
					<li><os:githubLink issue="628" /><h:link outcome="/components/param"><code>&lt;o:param&gt;</code></h:link> failed to use attached <code>converter</code> in Ajax postback with partial state saving disabled</li>
					<li><os:githubLink issue="629" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> failed to fallback when <code>javax.faces.validator.BeanValidator.MESSAGE</code> is absent in bundle</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.11?</h2>
				<p><em>Release date: 4 April, 2021</em></p>

				<h3 id="fixed_2_7_11">Fixed in OmniFaces 2.7.11</h3>
				<ul>
					<li><os:githubLink issue="623" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> will now automatically detect multiple mappings of <code>FacesServlet</code> so that these are also properly 301-redirected</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.10?</h2>
				<p><em>Release date: 24 January, 2021</em></p>

				<h3 id="fixed_2_7_10">Fixed in OmniFaces 2.7.10</h3>
				<ul>
					<li><os:githubLink issue="600" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> will now automatically deduplicate incorrectly duplicated <code>@ResourceDependency</code> stylesheets</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.9?</h2>
				<p><em>Release date: 19 December, 2020</em></p>

				<h3 id="fixed_2_7_9">Fixed in OmniFaces 2.7.9</h3>
				<ul>
					<li><os:githubLink issue="582" /><h:link outcome="/components/tree"><code>&lt;o:tree&gt;</code></h:link> will now also fire <code>PreValidateEvent</code>/<code>PostValidateEvent</code> on itself rather than only on <code>&lt;o:treeNode&gt;</code></li>
					<li><os:githubLink issue="583" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> threw <code>Uncaught TypeError: Cannot read property 'name' of null at Object.request</code> after being Ajax-updated itself</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.8?</h2>
				<p><em>Release date: 25 October, 2020</em></p>

				<h3 id="fixed_2_7_8">Fixed in OmniFaces 2.7.8</h3>
				<ul>
					<li><os:githubLink issue="575" /><h:link outcome="/taghandlers/converter"><code>&lt;o:converter&gt;</code></h:link> and <h:link outcome="/taghandlers/validator"><code>&lt;o:validator&gt;</code></h:link> threw <code>NotSerializableException</code> in MyFaces or when <code>javax.faces.PARTIAL_STATE_SAVING</code> is <code>false</code></li>
					<li><os:githubLink issue="576" /><h:link outcome="/converters/ToCollectionConverter"><code>omnifaces.ToCollectionConverter</code></h:link> didn't correctly delegate to <code>getAsObject()</code> when <code>itemConverter</code> is specified</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.7?</h2>
				<p><em>Release date: 12 September, 2020</em></p>

				<h3>Changed in OmniFaces 2.7.7</h3>
				<ul>
					<li><os:githubLink issue="570" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> <code>onerror</code> attribute was backported from 3.x to 2.x</li>
				</ul>

				<h3 id="fixed_2_7_7">Fixed in OmniFaces 2.7.7</h3>
				<ul>
					<li><os:githubLink issue="564" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> wasn't respecting <code>javax.faces.validator.BeanValidator.MESSAGE</code></li>
					<li><os:githubLink issue="566" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> moment of JSON encoding has been optimized so it's not repeated when same message is sent to multiple users</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.6?</h2>
				<p><em>Release date: 12 July, 2020</em></p>

				<h3 id="fixed_2_7_6">Fixed in OmniFaces 2.7.6</h3>
				<ul>
					<li><os:githubLink issue="560" /><h:link outcome="/components/deferredScript"><code>&lt;o:deferredScript&gt;</code></h:link> will now only start when <code>jQuery.ready</code> is finished, if any</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.5?</h2>
				<p><em>Release date: 3 May, 2020</em></p>

				<h3 id="fixed_2_7_5">Fixed in OmniFaces 2.7.5</h3>
				<ul>
					<li><os:githubLink issue="551" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> failed when using exclude patterns in Tomcat-based servers</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.4?</h2>
				<p><em>Release date: 12 April, 2020</em></p>

				<h3 id="fixed_2_7_4">Fixed in OmniFaces 2.7.4</h3>
				<ul>
					<li><os:githubLink issue="533" />OmniFaces version logger didn't log Z of X.Y.Z version.</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.3?</h2>
				<p><em>Release date: 30 November, 2019</em></p>

				<h3 id="fixed_2_7_3">Fixed in OmniFaces 2.7.3</h3>
				<ul>
					<li><os:githubLink issue="528" />Improved support for MyFaces <code>org.apache.myfaces.annotation.USE_CDI_FOR_ANNOTATION_SCANNING</code> to reduce startup time</li>
					<li><os:githubLink issue="530" /><h:link outcome="/components/messages"><code>&lt;o:messages&gt;</code></h:link> didn't render <code>styleClass</code> when the list is empty (hereby making it unnecessarily more difficult for e.g. PrimeFaces Selectors)</li>
					<li><os:githubLink issue="531" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload now also supports <code>pagehide</code> event of Safari on iOS</li>
					<li><os:githubLink issue="527" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> triggered a confusing <code>WARNING: Unable to save dynamic action</code> in Mojarra in Development stage</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.2?</h2>
				<p><em>Release date: 27 October, 2019</em></p>

				<h3 id="fixed_2_7_2">Fixed in OmniFaces 2.7.2</h3>
				<ul>
					<li><os:githubLink issue="517" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> beans now also support non-PassivationCapable beans such as used in Quarkus</li>
					<li><os:githubLink issue="514" /><h:link outcome="/taghandlers/validator"><code>&lt;o:validator&gt;</code></h:link> and <h:link outcome="/taghandlers/converter"><code>&lt;o:converter&gt;</code></h:link> threw <code>NotSerializableException</code></li>
					<li><os:githubLink issue="513" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> failed to inject correctly when <code>converterAttributes</code> or <code>validatorAttributes</code> is used</li>
					<li><os:githubLink issue="521" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> failed when mapped in subfolder</li>
					<li><os:githubLink commit="762fbf4" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> didn't render the correct fallback script for <code>&lt;o:deferredScript&gt;</code></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7.1?</h2>
				<p><em>Release date: 5 May, 2019</em></p>

				<h3 id="fixed_2_7_1">Fixed in OmniFaces 2.7.1</h3>
				<ul>
					<li><os:githubLink issue="478" /><h:link outcome="/taghandlers/tagAttribute"><code>&lt;o:tagAttribute&gt;</code></h:link> autogenerated ID was set in wrong variable mapper, causing duplicate IDs when multiple tags are used</li>
					<li><os:githubLink issue="483" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload of an expired view in older browsers (not supporting <code>Navigator.sendBeacon</code>) unnecessarily reinitialized the beans</li>
					<li><os:githubLink commit="2a703a2" /><h:link outcome="/utils/Components"><code>Components#getCurrentActionSource()</code></h:link> threw <code>NullPointerException</code> during unload request</li>
					<li><os:githubLink commit="ecc5d97,d8e3eee" /><h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link> wasn't correctly resolved when <code>forClass</code> refers a primitive</li>
		            <li><os:githubLink issue="498" /><h:link outcome="/utils/Faces"><code>Faces#redirect()</code></h:link> now supports <code>Object...</code> instead of <code>String...</code> as arguments</li>
		            <li><os:githubLink issue="499" /><h:link outcome="/resourcehandlers/CDNResourceHandler"><code>CDNResourceHandler</code></h:link> threw <code>ClassCastException</code> when <code>CDN_RESOURCE_HANDLER_DISABLED</code> param is set</li>
					<li><os:githubLink issue="503" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> reconnected in an infinite loop in older IE/Edge versions when session expired</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.7?</h2>
				<p><em>Release date: 29 July, 2018</em></p>

				<h3>Added in OmniFaces 2.7</h3>
				<ul>
					<li><os:githubLink issue="461" />New <h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CDNResource</code></h:link> marker class which allows <code>CombinedResourceHandler</code> generating a fallback local URL</li>
				</ul>

				<h3 id="fixed_2_7">Fixed in OmniFaces 2.7</h3>
				<ul>
					<li><os:githubLink issue="456" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> leaked memory</li>
					<li><os:githubLink issue="457" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> script ordering was off after non-Ajax postback in MyFaces</li>
					<li><os:githubLink issue="460" /><h:link outcome="/utils/Components"><code>Components#getCurrentActionSource()</code></h:link> didn't work within forms with <code>prependId="false"</code></li>
					<li><os:githubLink issue="464" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>org.omnifaces.COMBINED_RESOURCE_HANDLER_DISABLED</code></h:link> didn't correctly support EL expressions</li>
					<li><os:githubLink issue="463" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> shouldn't implicitly register the unload script on stateless views</li>
					<li><os:githubLink issue="467" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> caused deployment fail when optional Bean Validation is absent</li>
					<li><os:githubLink issue="466" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> wasn't JSF locale aware</li>
					<li><os:githubLink issue="474" /><h:link outcome="/taghandlers/tagAttribute"><code>&lt;o:tagAttribute&gt;</code></h:link> didn't automatically take care of autogenerated ID on an empty <code>&lt;o:tagAttribute name="id"&gt;</code></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.9?</h2>
				<p><em>Release date: 12 April, 2018</em></p>

				<h3 id="fixed_2_6_9">Fixed in OmniFaces 2.6.9</h3>
				<ul>
					<li><os:githubLink issue="434" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> disappears from page when a non-ajax non-redirect postback is performed</li>
					<li><os:githubLink issue="435" /><h:link outcome="/functions/Numbers"><code>of:formatThousands()</code></h:link> didn't support negative numbers</li>
					<li><os:githubLink issue="440" /><h:link outcome="/utils/Beans"><code>Beans#getManager()</code></h:link> will fall back to JNDI when CDI isn't initialized yet (fixes intermittent initialization errors in WebLogic server)</li>
					<li><os:githubLink issue="436" /><h:link outcome="/converters/SelectItemsIndexConverter"><code>SelectItemsIndexConverter</code></h:link> will now skip empty values (fixes incompatibility with ancient MyFaces 2.0.x versions)</li>
					<li><os:githubLink issue="444" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload failed in MyFaces 2.3.0</li>
					<li><os:githubLink issue="446" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> <code>showMessageFor="component1 component2"</code> didn't work as intented</li>
					<li><os:githubLink issue="447" /><h:link outcome="/components/inputFile"><code>&lt;o:inputFile&gt;</code></h:link> will now decapitalize file extension before testing mime type (fixes incompatiblity with WebSphere server)</li>
					<li><os:githubLink issue="449" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> didn't support folder names with a period</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.8?</h2>
				<p><em>Release date: 3 January, 2018</em></p>

				<h3 id="fixed_2_6_8">Fixed in OmniFaces 2.6.8</h3>
				<ul>
					<li><os:githubLink issue="426" /><h:link outcome="/contexts/OmniPartialViewContext"><code>OmniPartialViewContext</code></h:link> will now delegate <code>startDocument()</code> to wrapped partial response writer and reset internal <code>updating</code> state; this will only have a positive effect when you have your own wrapped partial response writer on top of OmniFaces</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.7?</h2>
				<p><em>Release date: 14 December, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.7</h3>
				<ul>
					<li><os:githubLink issue="417" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> broke since 2.6.6 in MyFaces when <code>shouldHandleExceptionRootCause()</code> is implemented in an extended exception handler; the original behavior has been fixed</li>
					<li><os:githubLink issue="423" /><h:link outcome="/utils/Servlets"><code>Servlets#getSubmittedFileName()</code></h:link> has been improved to support semicolons and quotes in file names (Unix) and UTF-8 filenames</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.6?</h2>
				<p><em>Release date: 10 November, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.6</h3>
				<ul>
					<li><os:githubLink issue="414" /><h:link outcome="/components/tree"><code>AbstractTreeModel#remove</code></h:link> broke since 2.6.5; the AbstractTreeModel#equals has been re-fixed</li>
					<li><os:githubLink issue="413" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> broke since 2.6.5; the default behavior on non-Ajax requests has been re-fixed</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.5?</h2>
				<p><em>Release date: 14 October, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.5</h3>
				<ul>
					<li><os:githubLink issue="401" /><h:link outcome="/components/tree"><code>AbstractTreeModel#equals</code></h:link> ran in infinite loop</li>
					<li><os:githubLink issue="399" /><h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link> subclasses were not correctly resolved (regression since 2.6)</li>
					<li><os:githubLink issue="396" /><h:link outcome="/components/inputFile"><code>&lt;h:inputFile&gt;</code></h:link> maxsize validation failed in IE11</li>
					<li><os:githubLink issue="395" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> can now be extended for non-Ajax requests, i.e. <a href="https://stackoverflow.com/a/34150411/157882" target="_blank">showing a faces message instead now also works for non-ajax requests</a></li>
					<li><os:githubLink issue="402" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> now supports exclude URL patterns like <code>&lt;param-value&gt;/*.xhtml/*, !/api, !/push&lt;/param-value&gt;</code></li>
					<li><os:githubLink issue="408" /><h:link outcome="/taghandlers/skipValidators"><code>&lt;o:skipValidators&gt;</code></h:link> didn't correctly restore <code>required="true"</code> literal across postbacks</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.4?</h2>
				<p><em>Release date: 31 July, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.4</h3>
				<ul>
					<li><os:githubLink issue="386" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> ran in infinite loop when session expires during a long running request in WildFly</li>
					<li><os:githubLink issue="392" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload on an expired restricted page should not be re-executed by authentication frameworks when user logs in again</li>
					<li><os:githubLink commit="5d47da1" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload didn't work correctly in Safari</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.3?</h2>
				<p><em>Release date: 4 June, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.3</h3>
				<ul>
					<li><os:githubLink issue="375" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload may fail when client side state saving is used on relatively large views</li>
					<li><os:githubLink issue="370" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload may fail when PrettyFaces rewrites its URL</li>
					<li><os:githubLink issue="372" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> threw <code>Invalid property path</code> when constructor injection is used</li>
					<li><os:githubLink issue="377" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> initialization failed during parallel deployment in WildFly</li>
					<li><os:githubLink issue="370" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload didn't delete physical beans from Mojarra's session storage</li>
					<li><os:githubLink issue="357" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped(saveInViewState=true)</code></h:link> is recreated on postback when <code>&lt;f:viewAction&gt;</code> is present</li>
					<li><os:githubLink issue="385" />PrimeFaces Dialog Framework's <code>closeDialog()</code> failed when <h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> is enabled</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.2?</h2>
				<p><em>Release date: 7 April, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.2</h3>
				<ul>
					<li><os:githubLink issue="363" />Removed accidentally introduced Java 1.8 specific methods (2.6 was therefore not Java 1.7 compatible, but 2.6.2 is)</li>
					<li><os:githubLink issue="362" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload failed in MyFaces when <code>&lt;f:viewAction&gt;</code> is present in view</li>
					<li><os:githubLink issue="368" />Standard JSF converters failed to initialize when it's subclassed into a custom <h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6.1?</h2>
				<p><em>Release date: 21 February, 2017</em></p>

				<h3>Fixed in OmniFaces 2.6.1</h3>
				<ul>
					<li><os:githubLink issue="355" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload threw NPE in MyFaces when unload is triggered on a cached page</li>
					<li><os:githubLink issue="361" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload failed in MyFaces when bean is created before the view is created</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.6?</h2>
				<p><em>Release date: 2 February, 2017</em></p>

				<h3>Added in OmniFaces 2.6</h3>
				<ul>
					<li><os:githubLink issue="317,342" /><code>showMessageFor</code> attribute for <h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> which also supports <code>ConstraintViolation#getPropertyPath()</code></li>
					<li><os:githubLink issue="311" /><h:link outcome="/el/FacesELResolver"><code>FacesELResolver</code></h:link> which injects a new implicit EL object <code>\#{faces}</code> providing direct access to methods of <h:link outcome="/utils/Faces"><code>Faces</code></h:link> utility class which start with "get" or "is", and take no parameters, and return either <code>String</code> or <code>boolean</code>, and are not related to response nor to session or flash</li>
					<li><os:githubLink commit="375dfd2" /><h:link outcome="/converters/TrimConverter"><code>TrimConverter</code></h:link>, <h:link outcome="/converters/ToLowerCaseConverter"><code>ToLowerCaseConverter</code></h:link> and <h:link outcome="/converters/ToUpperCaseConverter"><code>ToUpperCaseConverter</code></h:link> for basic conversions on submitted <code>String</code> values</li>
					<li><os:githubLink issue="326" /><code>OmniFaces.Unload.reenable()</code> function to allow developer explicitly re-enabling unload script of <h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link></li>
					<li><os:githubLink issue="327" /><h:link outcome="/converters/ToCollectionConverter"><code>ToCollectionConverter</code></h:link> to convert a delimited <code>String</code> submitted value to a fullworthy <code>Collection</code></li>
					<li><os:githubLink commit="ffb2b32,335d7f9" /><h:link outcome="/utils/Servlets"><code>Servlets#formatContentDispositionHeader()</code></h:link> which formats an UTF-8 compatible content disposition header, and <h:link outcome="/utils/Servlets"><code>Servlets#getRequestParameterMap()</code></h:link> which returns <code>Map&lt;String, List&lt;String&gt;&gt;</code> instead of <code>Map&lt;String, String[]&gt;</code></li>
					<li><os:githubLink issue="330" /><code>saveInViewState</code> attribute for <h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> which should trigger explicitly saving the entire view scoped bean in JSF view state when client side state saving is enabled, hereby making it effectively not requiring the HTTP session anymore</li>
					<li><os:githubLink commit="9b0c984,c267b1c,942bf43" /><h:link outcome="/utils/Faces"><code>Faces#getProjectStage()</code>, <code>Faces#isSystemTest()</code>, <code>Faces#isProduction()</code>, <code>Faces#getRequestParameter(name, type)</code> and <code>Faces#getRequestParameterValues(name, type)</code></h:link></li>
				</ul>

				<h3>Changed in OmniFaces 2.6</h3>
				<ul>
					<li><os:githubLink issue="319" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> is now an <code>UIComponent</code> instead of <code>TagHandler</code> in order to support <code>&lt;f:ajax&gt;</code></li>
					<li><os:githubLink issue="325" /><h:link outcome="/components/messages"><code>&lt;o:messages&gt;</code></h:link> is now also supported in iterating components</li>
					<li><os:githubLink commit="480727e" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload now uses new <a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon"><code>Navigator.sendBeacon</code> API</a> when available for faster unload (Beacon is basically fire-and-forget and ignores the response)</li>
					<li><os:githubLink commit="c62dd9f" />Inversed behavior of <h:link outcome="/taghandlers/tagAttribute"><code>&lt;o:tagAttribute&gt;</code></h:link> so that it doesn't anymore block inherited attributes/parameters from parent tags, but instead blocks the inheritance towards child tags; this allows more a natural way of extending existing tag files having <code>&lt;o:tagAttribute&gt;</code></li>
					<li><os:githubLink issue="122,339" /><h:link outcome="/resourcehandlers/CDNResourceHandler"><code>CDNResourceHandler</code></h:link> doesn't anymore require the target resource to be present in web project too</li>
					<li><os:githubLink issue="25" /><h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link> will now skip converters having a constructor taking <code>Class</code> argument</li>
					<li><os:githubLink issue="349" /><h:link outcome="/viewhandlers/OmniViewHandler"><code>NestedFormsChecker</code></h:link> is now more lenient as to forms nested in a <code>&lt;p:dialog&gt;</code></li>
				</ul>

				<h3>Fixed in OmniFaces 2.6</h3>
				<ul>
					<li><os:githubLink issue="315" />MyFaces incompatibility when <h:link outcome="/components/inputFile"><code>&lt;o:inputFile&gt;</code></h:link> is used with both <code>required="true"</code> and <code>accept</code> attributes (MyFaces unexpectedly gives an empty <code>Part</code> instance instead of <code>null</code> when no file is selected)</li>
					<li><os:githubLink issue="318" /><h:link outcome="/cdi/Eager"><code>@Eager</code></h:link> blocked deployment in Jetty</li>
					<li><os:githubLink issue="322" /><h:link outcome="/validators/validateAll"><code>ValidateMultipleFields</code></h:link> didn't explicitly call <code>FacesContext#renderResponse()</code>, causing update model values phase to be still invoked when there's no other validation fail on the same form</li>
					<li><os:githubLink commit="99e11c7,02f43ac,82ba972" />Several path matching fixes and improvements to <h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link></li>
					<li><os:githubLink commit="480727e" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload didn't recognize user defined <code>onbeforeunload</code> function</li>
					<li><os:githubLink commit="23d7baf" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> incompatibility with Deltaspike due to a change in OmniFaces 2.5 (Deltaspike didn't expect the <code>Lifecycle#render()</code> to be ever invoked without <code>Lifecycle#execute()</code> and broke with NPE)</li>
					<li><os:githubLink issue="333" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> ignored <code>org.omnifaces.EXCEPTION_TYPES_TO_UNWRAP</code> due to a refactoring mistake in OmniFaces 2.5</li>
					<li><os:githubLink issue="337" /><h:link outcome="/utils/Beans"><code>Beans#getReference()</code></h:link> broke in producer methods when where the now deprecated <code>BeanManager.INSTANCE.getReference()</code> worked fine</li>
					<li><os:githubLink issue="342,347" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> failed in specific composite component cases</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.5.1?</h2>
				<p><em>Release date: 21 September, 2016</em></p>

				<h3>Fixed in OmniFaces 2.5.1</h3>
				<ul>
					<li><os:githubLink issue="313" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> incorrectly skipped validating whole bean by <code>value</code> after a refactoring mistake</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.5?</h2>
				<p><em>Release date: 15 September, 2016</em></p>

				<h3>Added in OmniFaces 2.5</h3>
				<ul>
					<li><os:githubLink issue="278" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> now supports a new context param <code>org.omnifaces.EXCEPTION_TYPES_TO_IGNORE_IN_LOGGING</code> where you can specify exception types to ignore in logging</li>
					<li><os:githubLink issue="279" />Added <h:link outcome="/el/ExpressionInspector"><code>ExpressionInspector#getMethodReference()</code></h:link> to resolve base and method of a method expression</li>
					<li><os:githubLink issue="188" />Bunch of new <code>createConverter()</code> and <code>createValidator()</code> convenience methods on <h:link outcome="/utils/Faces"><code>Faces</code></h:link></li>
					<li><os:githubLink issue="181" />Throw <code>IllegalStateException</code> during development stage when there's a nested form</li>
					<li><os:githubLink issue="235" />New <h:link outcome="/components/inputFile"><code>&lt;o:inputFile&gt;</code></h:link> which extends <code>&lt;h:inputFile&gt;</code> with support for <code>multiple</code>, <code>directory</code>, <code>accept</code> and <code>maxsize</code>attributes, along with built-in validation on <code>accept</code> and <code>maxsize</code> attributes.</li>
					<li><os:githubLink issue="287,289" /><h:link outcome="/cdi/GraphicImageBean"><code>@GraphicImageBean</code></h:link> annotation to declare a bean as a public image service, along with <code>of:graphicImageURL()</code> EL functions which should generate the desired URL</li>
					<li><os:githubLink issue="298" /><code>showMessageFor</code> attribute of <h:link outcome="/validators/validateAll">multi field validators</h:link> now supports a new keyword <code>@global</code> which specifies that the message should be added as a global message</li>
					<li><os:githubLink issue="20" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> now supports the <code>MultiViews</code> feature as known in Apache HTTPD + PHP world</li>
					<li><os:githubLink issue="305" /><h:link outcome="/utils/Components"><code>Components#resetForm/resetInputs()</code></h:link> to reset state of input fields in given form or parent component</li>
				</ul>

				<h3>Changed in OmniFaces 2.5</h3>
				<ul>
					<li><os:githubLink issue="272" />Cookies created in server side by <h:link outcome="/utils/Faces"><code>Faces</code></h:link> and <h:link outcome="/utils/Servlets"><code>Servlets</code></h:link> utility classes are now by default always <code>HttpOnly</code></li>
					<li><os:githubLink issue="281,256" /><code>beans.xml</code> is now fully CDI 1.1 compatible and <code>BeanManager</code> enum has been deprecated and <h:link outcome="/utils/Beans"><code>Beans</code></h:link> utility class now always uses <code>CDI.current().getBeanManager()</code> and further some old CDI 1.0 related workarounds have been removed</li>
					<li><os:githubLink issue="284" /><h:link outcome="/utils/Beans"><code>Beans</code></h:link> utility class now supports specifying qualifiers via varargs argument in a.o. <code>resolve()</code>, <code>getReference()</code>, <code>getInstance()</code>, etc</li>
					<li><os:githubLink issue="285" /><code>RestorableViewHandler</code> has been renamed to <h:link outcome="/viewhandlers/OmniViewHandler"><code>OmniViewHandler</code></h:link> as it got more responsibilities</li>
					<li><os:githubLink issue="293" /><h:link outcome="/components/highlight"><code>&lt;o:highlight&gt;</code></h:link> will now remove the highlight when the enduser starts using the input field</li>
					<li><os:githubLink issue="20" /><code>RequestParamProducer</code> has been renamed to <h:link outcome="/cdi/Param"><code>ParamProducer</code></h:link> as it also supports path parameters</li>
				</ul>

				<h3>Fixed in OmniFaces 2.5</h3>
				<ul>
					<li><os:githubLink issue="283" />Weld 2.3.5 and newer issued warning WELD-000167 on <h:link outcome="/cdi/Param"><code>DynamicParamValueProducer</code></h:link></li>
					<li><os:githubLink issue="234" />Bypass Tomcat misbehavior during push bomb on <h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link></li>
					<li><os:githubLink issue="224" />Silence Mojarra warning "Unable to save dynamic action" in <h:link outcome="/components/moveComponent"><code>&lt;o:moveComponent&gt;</code></h:link></li>
					<li><os:githubLink commit="bedcddc" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload didn't work when full state saving was enabled</li>
					<li><os:githubLink issue="294" /><h:link outcome="/components/graphicImage"><code>&lt;o:graphicImage&gt;</code></h:link> didn't render its <code>id</code> attribute</li>
					<li><os:githubLink issue="297" /><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code></h:link> failed serving RichFaces-specific resources</li>
					<li><os:githubLink issue="295" />Constructor injection of <h:link outcome="/cdi/Param"><code>@Param</code></h:link> failed on dynamic (non-String) types</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.4?</h2>
				<p><em>Release date: 1 July, 2016</em></p>

				<h3>Added in OmniFaces 2.4</h3>
				<ul>
					<li><os:githubLink commit="0b190e4" /><h:link outcome="/utils/Components"><code>Components#getCurrentActionSource/ActionExpressionsAndListeners()</code></h:link> which should ease a.o. <a href="https://stackoverflow.com/q/31853188/157882">logging JSF ajax actions</a></li>
					<li><os:githubLink issue="113" /><h:link outcome="/components/url"><code>&lt;o:url&gt;</code></h:link> which fills the gap caused by absence of JSTL <code>&lt;c:url&gt;</code> in Facelets</li>
					<li><os:githubLink issue="258" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> got new <code>logException</code> override which allows determining the log reason</li>
					<li><os:githubLink issue="257" /><h:link outcome="/functions/Arrays"><code>of:reverseArray()</code></h:link> to reverse an array</li>
				</ul>

				<h3>Changed in OmniFaces 2.4</h3>
				<ul>
					<li><os:githubLink commit="ebd78a7,f773bb6" />Scripts generated by <h:link outcome="/components/deferredScript"><code>&lt;o:deferredScript&gt;</code></h:link> and <h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> have now by default a <a href="https://www.w3.org/TR/html5/scripting-1.html#attr-script-crossorigin"><code>crossorigin="anonymous"</code></a> attribute which basically enables logging via <a href="https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror"><code>window.onerror</code></a> in case script is served via CDN</li>
					<li><os:githubLink issue="250" />Issue 98 of OmniFaces 2.1 was rolled back as it caused <code>&lt;o:importConstants&gt;</code> to not run anymore during postback, and the original problem appears to be fixed in newer Mojarra versions</li>
					<li><os:githubLink issue="251" /><h:link outcome="/functions/Numbers"><code>of:formatThousandsUnit()</code></h:link> now also supports cutting down fractions of values lower than thousand</li>
					<li><os:githubLink issue="223,266" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> now also supports injecting primitives and multi-valued parameters declared as typed <code>List</code> or array like <code>List&lt;String&gt;</code>, <code>List&lt;Foo&gt;</code>, <code>String[]</code> and <code>int[]</code></li>
					<li><os:githubLink commit="e0d8e0d,56b03cd,0e629e" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link> and <h:link outcome="/utils/Faces"><code>Faces#getRequestXxx()</code></h:link> is now also compatible with existing URL rewrite filters running in front of it (which under the covers performs a <code>forward()</code>)</li>
					<li><os:githubLink issue="243" />OmniFaces does not anymore require <code>/META-INF/context.xml</code> when running on Tomcat+Weld</li>
				</ul>

				<h3>Fixed in OmniFaces 2.4</h3>
				<ul>
					<li><os:githubLink issue="228" /><h:link outcome="/components/tree"><code>&lt;o:tree&gt;</code></h:link> failed state saving when being dynamically created</li>
					<li><os:githubLink issue="236" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> didn't properly trigger <code>FacesContext#isValidationFailed()</code> when <code>required="true"</code> is not satisfied</li>
					<li><os:githubLink issue="237" /><h:link outcome="/utils/Faces"><code>Faces#sendFile()</code></h:link> and <h:link outcome="/servlets/FileServlet"><code>FileServlet</code></h:link> incorrectly encoded spaces in filename as <code>+</code> instead of <code>%20</code></li>
					<li><os:githubLink issue="238" /><h:link outcome="/validators/JsfLabelMessageInterpolator"><code>JsfLabelMessageInterpolator</code></h:link> was missing the 2-argument overloaded method</li>
					<li><os:githubLink commit="b149204" />Bypass <a href="https://stackoverflow.com/q/36719434/157882">possible Google Chrome bug</a> when <h:link outcome="/servlets/FileServlet"><code>FileServlet</code></h:link> is used with Gzip enabled</li>
					<li><os:githubLink issue="227,240" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> failed in composite component inputs and also with dynamic properties in ui:repeat</li>
					<li><os:githubLink issue="234" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> caused exceptions in Tomcat when code sends too many messages in short time</li>
					<li><os:githubLink commit="0f554c0" /><h:link outcome="/utils/FacesConfigXml"><code>FacesConfigXml#getSupportedLocales()</code></h:link> failed to parse <code>language_COUNTRY</code> locales</li>
					<li><os:githubLink issue="248,111" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> failed to handle exceptions during render response phase in two Mojarra-related corner cases</li>
					<li><os:githubLink issue="252" /><h:link outcome="/functions/Numbers"><code>of:formatThousandsUnit()</code></h:link> incorrectly trimmed trailing zeroes from non-fractional integer numbers</li>
					<li><os:githubLink issue="245,259,199" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> destroyed too soon when <code>&lt;p:commandLink ajax="false"&gt;</code> was used, and unload submitted to the wrong URL when a forward navigation was used</li>
					<li><os:githubLink issue="264" /><h:link outcome="/converters/ListIndexConverter"><code>ListIndexConverter</code></h:link> threw <code>NumberFormatException</code> instead of conversion error when empty input was submitted</li>
					<li><os:githubLink issue="273" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> failed in PrimeFaces 6.0 when a component requiring a new resource is dynamically created during an ajax request (instead of just conditionally rendered)</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.3?</h2>
				<p><em>Release date: 1 April, 2016</em></p>

				<h3>Added in OmniFaces 2.3</h3>
				<ul>
					<li><os:githubLink issue="17" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> for web socket based push which can be accessed via CDI <code>@Push</code></li>
					<li><os:githubLink commit="72d3aae" /><h:link outcome="/utils/Servlets"><code>Servlets#getRemoteAddr()</code></h:link> to get request remote address, taking into account the <code>X-Forwarded-For</code> header</li>
					<li><os:githubLink commit="eef138e" /><h:link outcome="/utils/Beans"><code>Beans#fireEvent()</code></h:link> to fire a CDI event object</li>
					<li><os:githubLink commit="e3ee8fb" /><h:link outcome="/utils/Beans"><code>Beans#isActive(scope)</code></h:link> to check if a scope is active without need to catch <code>ContextNotActiveException</code></li>
					<li><os:githubLink issue="194" /><h:link outcome="/utils/Faces"><code>Faces#sendFile()</code></h:link> has now one more method accepting an <code>OutputStream</code> callback</li>
					<li><os:githubLink issue="125,202" /><h:link outcome="/taghandlers/skipValidators"><code>&lt;o:skipValidators&gt;</code></h:link> to skip all validation during a <code>UICommand</code> action or an ajax request</li>
					<li><os:githubLink commit="a2c1473" /><h:link outcome="/functions/Numbers"><code>of:formatThousands()</code></h:link> to round a number to nearest thousand with immediate "k", "M", "G", etc suffix and a precision of 3 digits, whereafter trailing zeroes in fraction are stripped</li>
					<li><os:githubLink issue="204" /><h:link outcome="/functions/Numbers"><code>of:formatThousandsUnit()</code></h:link> to round a number to nearest thousand of given unit with "k", "M", "G", etc prefix and a precision of 3 digits, whereafter trailing zeroes in fraction are stripped</li>
					<li><os:githubLink issue="206" /><h:link outcome="/functions/Numbers"><code>of:formatNumberDefaultForLocale()</code></h:link> to format a number in locale-default pattern of given locale</li>
					<li><os:githubLink issue="205" /><h:link outcome="/utils/Faces"><code>Faces#getViewName()</code></h:link> to get base name of current view (without extension)</li>
					<li><os:githubLink issue="196" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> now supports a new context param <code>org.omnifaces.EXCEPTION_TYPES_TO_UNWRAP</code> where you can specify additional exception types to unwrap the root cause from.</li>
					<li><os:githubLink issue="216" /><h:link outcome="/servlets/FileServlet"><code>FileServlet</code></h:link> now supports customizing 404 error handling and attachment file name.</li>
					<li><os:githubLink commit="8dbd495" /><h:link outcome="/utils/Ajax"><code>Ajax#load()</code></h:link> to load a script resource on complete of current ajax request.</li>
				</ul>

				<h3>Changed in OmniFaces 2.3</h3>
				<ul>
					<li><os:githubLink issue="178" /><code>&lt;o:importConstants&gt;</code> will not anymore include parent of an inner class in default value of <code>var</code> attribute, so e.g. <code>\#{Parent$Inner}</code> will now be <code>\#{Inner}</code></li>
					<li><os:githubLink commit="214d189" /><code>BeanManager.INSTANCE.getReference()</code> is <strong>deprecated</strong> in favor of <h:link outcome="/utils/Beans"><code>Beans#getReference()</code></h:link></li>
					<li><os:githubLink issue="218" /><code>&lt;o:commandScript&gt;</code> now supports declaring a namespaced function</li>
				</ul>

				<h3>Fixed in OmniFaces 2.3</h3>
				<ul>
					<li><os:githubLink commit="84f6748" /><h:link outcome="/utils/WebXml"><code>WebXml#isAccessAllowed()</code></h:link> incorrectly matched extension based URLs in prefix path checking</li>
					<li><os:githubLink commit="b3d2ea5" />When mapping <h:link outcome="/facesviews/ExtensionlessURLs">FacesViews</h:link> on <code>/</code> and triggering a 404 error, then Mojarra confusingly threw a "Response already committed" exception</li>
					<li><os:githubLink issue="187" /><h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link> didn't render HTML attributes such as <code>styleClass</code> when MyFaces is used</li>
					<li><os:githubLink issue="199" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> failed to initialize unload script when it's created for first time after an ajax navigation action</li>
					<li><os:githubLink issue="200" /><h:link outcome="/utils/Components"><code>Components#findComponentInParents()</code></h:link> ran in an infinite loop when illegal client ID is supplied</li>
					<li><os:githubLink issue="208" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> didn't physically remove server side JSF view state during unload</li>
					<li><os:githubLink commit="c972602" /><h:link outcome="/contexts/OmniPartialViewContext"><code>OmniPartialViewContext</code></h:link> will now invalidate session before redirecting to <code>web.xml</code> form login page (fixes WildFly's agressive caching of login page response which exposes as <code>&lt;partial-response&gt;</code> XML visible in browser)</li>
					<li><os:githubLink issue="226" /><h:link outcome="/components/tree"><code>&lt;o:tree&gt;</code></h:link> failed to resolve <code>\#{cc}</code> when nested in composite component</li>
					<li><os:githubLink issue="225" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> failed on string concatenated properties like <code>\#{bean[foo += bar]}</code></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.2?</h2>
				<p><em>Release date: 24 November, 2015</em></p>

				<h3>Added in OmniFaces 2.2</h3>
				<ul>
					<li><os:githubLink issue="124" /><code>&lt;o:commandScript&gt;</code> got new <code>autorun</code> attribute, allowing for immediate execution during window load event</li>
					<li><os:githubLink issue="118" /><h:link outcome="/components/viewParam"><code>&lt;o:viewParam&gt;</code></h:link> got new <code>default</code> attribute, allowing to set a default value when no view param is present</li>
					<li><os:githubLink commit="572c118" /><h:link outcome="/utils/Faces"><code>Faces#refresh()</code> and <code>Faces#refreshWithQueryString()</code></h:link> which do basically <code>redirect(getRequestURI())</code>; added <code>Faces#getRenderKit()</code></li>
					<li><os:githubLink commit="efd9347" /><h:link outcome="/utils/Faces"><code>Faces#getRenderKit()</code></h:link> which can obtain the render kit from the factory when there's no view around</li>
					<li><os:githubLink issue="157" /><h:link outcome="/utils/Messages"><code>Messages#isEmpty()</code>, <code>Messages#isEmpty(clientId)</code> and<code>Messages#isGlobalEmpty()</code></h:link></li>
					<li><os:githubLink commit="465a78d" /><h:link outcome="/utils/FacesConfigXml">Added <code>FacesConfigXml#getSupportedLocales()</code></h:link> which returns an ordered list in contrary to <code>Faces#getSupportedLocales()</code></li>
					<li><os:githubLink issue="116" /><h:link outcome="/components/form"><code>&lt;o:form&gt;</code></h:link> now supports <code>&lt;f|o:param&gt;</code> children</li>
					<li><os:githubLink commit="1c912f7,62949a3,ad44be1,5216b57" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> now listens on browser unload event and gets destroyed sooner</li>
					<li><os:githubLink issue="148" /><h:link outcome="/cdi/ContextParam"><code>@ContextParam</code></h:link> which injects a <code>&lt;context-param&gt;</code> value</li>
					<li><os:githubLink issue="1c912f7" /><h:link outcome="/utils/Components"><code>Components#addScriptXxx()</code></h:link> methods which can add an inline script or script resource to head or body</li>
					<li><os:githubLink issue="167" /><h:link outcome="/utils/Components"><code>Components#includeCompositeComponent()</code></h:link> overloaded method which takes an attribute map</li>
					<li><os:githubLink issue="149" /><h:link outcome="/utils/Components"><code>Components#buildView()</code> and <code>Components#encodeHtml()</code></h:link> allowing local building and encoding of (simple) templates</li>
					<li><os:githubLink issue="119" /><h:link outcome="/components/viewAction"><code>&lt;o:viewAction&gt;</code></h:link> component which evaluates <code>if</code> attribute during invoke application phase</li>
					<li><os:githubLink commit="1417fc0" />Added abstract template for "<h:link outcome="/servlets/FileServlet">BalusC FileServlet</h:link>" which supports a.o. cache and range (resume) requests</li>
				</ul>

				<h3>Changed in OmniFaces 2.2</h3>
				<ul>
					<li><os:githubLink commit="55510fa" /><code>Html5RenderKit</code> is <strong>deprecated</strong> in favor of JSF 2.2 passthrough attributes; it will be removed in OmniFaces 3.0</li>
					<li><os:githubLink commit="d364daf" /><h:link outcome="/eventlisteners/InvokeActionEventListener"><code>&lt;f:event type="(pre|post)InvokeAction"&gt;</code></h:link> is now supported on all components</li>
					<li><os:githubLink issue="164" /><h:link outcome="/taghandlers/importFunctions"><code>&lt;o:importFunctions"&gt;</code></h:link> will now throw a clear <code>IllegalArgumentException</code> on non-existing function</li>
					<li><os:githubLink issue="167" />Migrated <h:link outcome="/utils/Components"><code>Components#includeCompositeComponent()</code></h:link> to JSF 2.2 approach with <code>createComponent()</code></li>
				</ul>

				<h3>Fixed in OmniFaces 2.2</h3>
				<ul>
					<li><os:githubLink commit="6cf7123,96d5d17" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> failed when resource name contains a query string, and ordering w.r.t. suppressed resources failed during synchronous postback in MyFaces</li>
					<li><os:githubLink issue="141" /><h:link outcome="/utils/JNDI"><code>JNDI#lookup()</code></h:link> in GlassFish 4.x incorrectly threw <code>NamingExcepion</code> instead of returning <code>null</code></li>
					<li><os:githubLink commit="f914b83" /><h:link outcome="/utils/Components"><code>Components#getParams()</code></h:link> didn't consider <code>Converter</code> of <code>ParamHolder</code></li>
					<li><os:githubLink issue="127,179" /><h:link outcome="/utils/Ajax"><code>Ajax#updateRow()</code></h:link> failed in paginated tables and p:columns</li>
					<li><os:githubLink issue="156" /><h:link outcome="/utils/WebXml"><code>WebXml#findErrorPageLocation()</code></h:link> (and <code>FullAjaxExceptionHandler</code>) didn't consider entire class hierarchy when matching exception types</li>
					<li><os:githubLink issue="150" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> threw NPE on unrendered inputs</li>
					<li><os:githubLink issue="144" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> threw IAE on boolean inputs</li>
					<li><os:githubLink issue="168" /><h:link outcome="/eventlisteners/ResetInputAjaxActionListener"><code>ResetInputAjaxActionListener</code></h:link> is now also compatible with RichFaces 4.5+</li>
					<li><os:githubLink issue="166" /><h:link outcome="/cdi/Eager"><code>@Eager</code></h:link> blocked deployment in Jetty</li>
					<li><os:githubLink issue="183" /><h:link outcome="/contexts/OmniPartialViewContext"><code>OmniPartialViewContext</code></h:link> failed to handle <code>web.xml</code> form login page redirect in MyFaces 2.2+</li>
					<li><os:githubLink commit="d82d6a0" /><h:link outcome="/components/graphicImage"><code>&lt;o:graphicImage&gt;</code></h:link> generated illegal URL when OpenWebBeans managed bean is used</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.1?</h2>
				<p><em>Release date: 3 June, 2015</em></p>

				<h3>Added in OmniFaces 2.1</h3>
				<ul>
					<li><os:githubLink commit="0cd13ea" /><h:link outcome="/taghandlers/tagAttribute"><code>&lt;o:tagAttribute&gt;</code></h:link> to explicitly declare a tagfile attribute which is only exposed in tagfile's own EL scope, to prevent pollution in EL scope of nested tagfiles</li>
					<li><os:githubLink commit="51060ff" /><h:link outcome="/utils/FacesConfigXml"><code>FacesConfigXml</code></h:link> to get <code>faces-config.xml</code> entries which are not available via native JSF API (currently only a mapping of all <code>&lt;resource-bundle&gt;</code> entries can be obtained)</li>
					<li><os:githubLink issue="100" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> now supports server-side caching of combined resources via <code>org.omnifaces.COMBINED_RESOURCE_HANDLER_CACHE_TTL</code> context param</li>
					<li><os:githubLink commit="070e7b5" /><h:link outcome="/components/graphicImage"><code>&lt;o:graphicImage&gt;</code></h:link> now also supports SVG images with explicit <code>type="svg"</code> attribute and <code>fragment</code> attribute for SVG view modes</li>
					<li><os:githubLink commit="09f187d" /><h:link outcome="/cdi/Eager"><code>@Eager</code></h:link> now also supports JSF 2.2 <code>javax.faces.view.ViewScoped</code></li>
					<li><os:githubLink commit="2d640e0" /><h:link outcome="/cdi/Cookie"><code>@Cookie</code></h:link> to inject a HTTP request cookie in a CDI managed bean</li>
					<li><os:githubLink issue="114" />Several shortcut functions on current HTTP request: <h:link outcome="/functions/Request"><code>of:getRequestBaseURL()</code>, <code>of:getRequestDomainURL()</code>, <code>of:getRequestURLWithQueryString()</code>, <code>of:getRemoteAddr()</code></h:link></li>
		            <li><os:githubLink issue="57" /><h:link outcome="/utils/Faces"><code>Faces</code></h:link> and <h:link outcome="/utils/FacesLocal"><code>FacesLocal</code></h:link> got new <code>getResourceBundles()</code> and <code>getBundleString()</code> methods</li>
		            <li><os:githubLink commit="82ace56" /><h:link outcome="/utils/Servlets"><code>Servlets</code></h:link> got a new <code>isFacesDevelopment()</code> method</li>
				</ul>

				<h3>Changed in OmniFaces 2.1</h3>
				<ul>
					<li><os:githubLink commit="169bb7f" /><h:link outcome="/filters/GzipResponseFilter"><code>GzipResponseFilter</code></h:link> default threshold is lowered from 500b to 150b to catch up modern hardware, and default mimetypes is extended with <code>image/svg+xml</code></li>
					<li><os:githubLink issue="53" /><h:link outcome="/filters/CacheControlFilter"><code>CacheControlFilter</code></h:link> does not run anymore when project stage is set to development</li>
					<li><os:githubLink issue="92" /><code>RestorableViewHandler</code> does not anymore try to restore the view as long as <h:link outcome="/taghandlers/enableRestorableView"><code>&lt;o:enableRestorableView&gt;</code></h:link> is never used</li>
				</ul>

				<h3>Fixed in OmniFaces 2.1</h3>
				<ul>
					<li><os:githubLink issue="97" />All resource handlers (CDN, Combined and Unmapped) are made better compatible with other 3rd party component libraries (e.g. PrimeFaces ones which appends a version to query string)</li>
					<li><os:githubLink commit="ed34f1d,bb92fba,83b9c6e,a0884ac" />Serialization-related issues in several taghandlers (and <code>Callback</code> interfaces) when new <a href="https://arjan-tijms.omnifaces.org/p/jsf-22.html#1127"><code>javax.faces.SERIALIZE_SERVER_STATE</code></a> context param is set to <code>true</code></li>
					<li><os:githubLink issue="83" /><h:link outcome="/viewhandlers/NoAutoGeneratedIdViewHandler"><code>NoAutoGeneratedIdViewHandler</code></h:link> failed when view state ID rendering was enabled</li>
					<li><os:githubLink issue="98" /><code>&lt;o:importConstants&gt;</code> failed in composite components in Mojarra</li>
					<li><os:githubLink issue="45" /><h:link outcome="/components/deferredScript"><code>&lt;o:deferredScript&gt;</code></h:link> and <h:link outcome="/components/onloadScript"><code>&lt;o:onloadScript&gt;</code></h:link> failed during postbacks on stateless views</li>
					<li><os:githubLink commit="e406bd4" /><h:link outcome="/components/param"><code>&lt;o:param&gt;</code></h:link> for output format failed in MyFaces by rendering children anyway</li>
					<li><os:githubLink issue="133" />CDI validation failed in Tomcat + OpenWebBeans</li>
					<li><os:githubLink issue="132" /><h:link outcome="/managedbeans/startup"><code>\#{startup}</code></h:link> wasn't eagerly initialized</li>
					<li><os:githubLink commit="500019e" /><h:link outcome="/converters/SelectItemsIndexConverter"><code>SelectItemsIndexConverter</code></h:link> didn't properly update when new items are added during invoke application</li>
					<li><os:githubLink commit="38d0330" /><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code></h:link> memory leak on composite components</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 2.0?</h2>
				<p><em>Release date: 24 November, 2014</em></p>

				<h3>Major in OmniFaces 2.0</h3>
				<ul class="important">
					<li>Dependencies are changed from Java 1.6, JSF 2.0, Servlet 2.5, EL 2.1 to <strong>Java 1.7, JSF 2.2, Servlet 3.0, EL 2.2 and CDI 1.1</strong>;
						as of now, OmniFaces 2.0 is still backwards compatible with JSF 2.1, but not with JSF 2.0 anymore</li>
					<li>OmniFaces initialization will explicitly <a href="https://omnifaces.org/cdi">fail</a> if CDI <code>BeanManager</code> is unavailable during application startup</li>
					<li><h:link outcome="/utils/Events"><code>Events</code> utility class has major method renames to clarify the meaning</h:link></li>
					<li><h:link outcome="/utils/Beans"><code>Beans</code> utility class doesn't take <code>BeanManager</code> anymore as argument</h:link></li>
				</ul>

				<h3>Added in OmniFaces 2.0</h3>
				<ul>
					<li><os:githubLink commit="c83e4ab" /><h:link outcome="/viewhandlers/NoAutoGeneratedIdViewHandler"><code>NoAutoGeneratedIdViewHandler</code></h:link> which throws a runtime exception when an autogenerated JSF client ID is being rendered</li>
					<li><os:githubLink commit="ca1e625" /><h:link outcome="/taghandlers/viewParamValidationFailed"><code>&lt;o:viewParamValidationFailed&gt;</code></h:link> which enables sending either a redirect or error status on validation failure of view parameters</li>
					<li><os:githubLink commit="85bfbdf" /><h:link outcome="/components/graphicImage"><code>&lt;o:graphicImage&gt;</code></h:link> which is capable of referencing a <code>byte[]</code> or <code>InputStream</code> property with optional support for data URI format</li>
					<li><os:githubLink commit="d598611" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> now supports directly injecting the (auto-converted) value</li>
		            <li><os:githubLink commit="da6940a" /><h:link outcome="/components/moveComponent"><code>&lt;o:moveComponent&gt;</code></h:link> via which components, facets and behaviors can be moved at runtime to a target component in various ways</li>
					<li><os:githubLink commit="2286fd4" /><h:link outcome="/components/resolveComponent"><code>&lt;o:resolveComponent&gt;</code></h:link> via which a component can be looked up by its ID and a reference to it put in various scopes</li>
					<li><os:githubLink commit="82547a7" />New <h:link outcome="/utils/BeansLocal"><code>BeansLocal</code></h:link> utility class next to <code>Beans</code> class with the same philosophy as <code>Faces</code>/<code>FacesLocal</code></li>
		            <li><os:githubLink commit="372dfde,04b0110,6d1b75a,2647e68" /><h:link outcome="/utils/Servlets"><code>Servlets</code></h:link> utility class got a bunch of new methods related to cookies and JSF</li>
					<li><os:githubLink issue="39" />Default validation message of <h:link outcome="/validators/validateAll"><code>ValidateMultipleFields</code></h:link> components can now be supplied via <code>&lt;message-bundle&gt;</code></li>
					<li><os:githubLink commit="3cda0b2" /><h:link outcome="/resourcehandlers/CDNResourceHandler"><code>CDNResourceHandler</code></h:link> and <h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> can now be disabled via a <code>web.xml</code> context param supporting a request based EL expression</li>
		            <li><os:githubLink issue="33" /><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code></h:link> now supports validating beans at the class level</li>
				</ul>

				<h3>Changed in OmniFaces 2.0</h3>
				<ul>
					<li><os:githubLink commit="f8f84aa" /><h:link outcome="/components/viewParam"><code>&lt;o:viewParam&gt;</code></h:link> enables support for <code>@NotNull</code> and <code>Pre/PostValidateEvent</code> even when parameter is not specified, on contrary to <code>&lt;f:viewParam&gt;</code></li>
					<li><os:githubLink commit="9fa0c3b" /><code>Html5RenderKit</code> is now not forgiving anymore on broken renderers that don't pass the current component to the <code>write</code> methods (fixes "plain HTML" messup)</li>
					<li><os:githubLink issue="47" />Skip null/empty values in <h:link outcome="/validators/validateOrder"><code>&lt;o:validateOrder&gt;</code></h:link> as that's actually the responsibility of <code>required="true"</code></li>
				</ul>

				<h3>Fixed in OmniFaces 2.0</h3>
				<ul>
					<li><os:githubLink commit="bf833e3" />Set system default timezone in CDI <h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link> when <code>web.xml</code> context param says so</li>
					<li><os:githubLink commit="9870108" /><h:link outcome="/utils/Components"><code>Components#hasInvokedSubmit()</code></h:link> failed in iterating components such as <code>UIData</code> and <code>UIRepeat</code></li>
					<li><os:githubLink issue="51" />Fixed <h:link outcome="/taghandlers/massAttribute"><code>&lt;o:massAttribute&gt;</code></h:link> to only consider own children instead of those of parent</li>
					<li><os:githubLink issue="65" /><h:link outcome="/filters/GzipResponseFilter"><code>GzipResponseFilter</code></h:link> is made better compatible with Servlet 3.1 containers</li>
				</ul>
			</p:tab>

			<p:tab id="v1" title="1.x">
				<h2>What's new in OmniFaces 1.8.3?</h2>
				<p><em>Release date: 3 June, 2015</em></p>
				<h3>Fixed in OmniFaces 1.8.3</h3>
				<ul>
					<li><os:githubLink commit="38d0330" /><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code> memory leak on composite components</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.8.1?</h2>
				<p><em>Release date: 3 June, 2014</em></p>
				<h3>Fixed in OmniFaces 1.8.1</h3>
				<ul>
					<li>During fixing <a href="https://github.com/omnifaces/omnifaces/issues/35">issue 35</a> some <code>CombinedResourceHandler</code> code necessary for dealing with <code>&lt;o:deferredScript&gt;</code> was accidentally removed, causing those to not be suppressed from head (and thus effectively included twice).</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.8?</h2>
				<p><em>Release date: 2 June, 2014</em></p>

				<h3>Added in OmniFaces 1.8</h3>
				<ul>
					<li><h:link outcome="/utils/WebXml"><code>WebXml#getFormErrorPage()</code> to get web.xml configured location of the FORM authentication error page</h:link></li>
					<li><h:link outcome="/components/deferredScript"><code>&lt;o:deferredScript&gt;</code> which is capable of deferring JavaScript resources to <code>window.onload</code></h:link></li>
					<li><h:link outcome="/utils/Faces"><code>Faces#addResponseCookie()</code> got 2 new overloaded methods whereby domain and path defaults to current request domain and current path</h:link></li>
					<li><h:link outcome="/utils/Components"><code>Components#isRendered()</code> which also checks the <code>rendered</code> attribute of all parents of the given component</h:link></li>
					<li><h:link outcome="/taghandlers/massAttribute"><code>&lt;o:massAttribute&gt;</code> which sets the given attribute on all nested components</h:link></li>
					<li><h:link outcome="/exceptionhandlers/FacesMessageExceptionHandler"><code>FacesMessageExceptionHandler</code> which sets any caught exception as a global FATAL faces message</h:link></li>
					<li><h:link outcome="/components/cache"><code>&lt;o:cache&gt;</code> has new <code>disabled</code> attribute to temporarily disable the cache and pass-through children directly</h:link></li>
					<li><h:link outcome="/cdi/Eager"><code>@Eager</code> annotation to eagerly instantiate request-, view-, session- and application scoped beans</h:link></li>
					<li><h:link outcome="/components/viewParam"><code>&lt;o:viewParam&gt;</code> skips converter for <code>null</code> model values so that query string doesn't get polluted with an empty string</h:link></li>
					<li>Small amount of utility methods and classes, e.g. method to check CDI annotations recursively in stereotypes, shortcut method to obtain VDL, etc</li>
				</ul>

				<h3>Changed in OmniFaces 1.8</h3>
				<ul>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code> now also recognizes and combines <code>&lt;o:deferredScript&gt;</code></h:link></li>
					<li><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code> now also recognizes PrimeFaces dynamic resources using <code>StreamedContent</code></h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.8</h3>
				<ul>
					<li>Assume <code>RuntimeException</code> in <code>BeanManager#init()</code> as CDI not available (fixes deployment error on WAS 8.5 without CDI enabled)</li>
					<li>Use "<code>-</code>" instead of <code>null</code> as default value to workaround <code>noSelectionOption</code> fail with <code>GenericEnumConverter</code></li>
					<li><h:link outcome="/components/outputFormat"><code>&lt;o:param&gt;</code> shouldn't silently convert the value to <code>String</code> (fixes e.g. <code>java.util.Date</code> formatting fail in <code>&lt;o:outputFormat&gt;</code>)</h:link></li>
					<li><h:link outcome="/utils/Beans">Fixed <code>javax.enterprise.inject.AmbiguousResolutionException</code> in subclassed <code>@FacesConverter</code> and <code>@FacesValidator</code></h:link></li>
					<li><h:link outcome="/components/messages"><code>&lt;o:messages&gt;</code> failed to find the <code>for</code> component when it's not in the same parent</h:link></li>
					<li><h:link outcome="/components/conditionalComment"><code>&lt;o:conditionalComment&gt;</code> shouldn't XML-escape the <code>if</code> value, enabling usage of <code>&amp;</code> character</h:link></li>
					<li><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code> broke state saving when partial state saving is turned off</h:link></li>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code> didn't properly deal with MyFaces-managed resources</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.7?</h2>
				<p><em>Release date: 12 January, 2014</em></p>

				<h3>Added in OmniFaces 1.7</h3>
				<ul>
					<li>New <code>omnifaces:fixviewstate.js</code> script which should automatically fix JSF issue 790</li>
					<li><h:link outcome="/validators/validateAllOrNone">Added <code>invalidateAll</code> attribute to disable invalidating valid fields, and add support for <code>showMessageFor="@invalid"</code> to show message for invalidated fields only</h:link></li>
					<li><h:link outcome="/validators/ValueChangeValidator">New <code>ValueChangeValidator</code> which runs only when the submitted and converted value is really changed as compared to the model value</h:link></li>
					<li><h:link outcome="/utils/Faces">Added <code>Faces#getBookmarkableURL()</code> methods taking <code>ParamHolder</code> instances as value</h:link></li>
					<li><h:link outcome="/utils/Beans">Added <code>Beans#getInstance()</code> and <code>Beans#getActiveInstances()</code> methods returning concrete (non-proxied) instances</h:link></li>
					<li><h:link outcome="/filters/CacheControlFilter">New <code>CacheControlFilter</code> which can control cache-related headers of the response</h:link></li>
					<li><h:link outcome="/validators/validateMultiple">New <code>&lt;o:validateMultiple&gt;</code> tag which allows validating multiple fields via a custom validator method or implementation</h:link></li>
					<li><h:link outcome="/utils/WebXml">Added <code>WebXml#getSessionTimeout()</code> to get web.xml configured session timeout</h:link></li>
					<li><h:link outcome="/components/tree">Added <code>SortedTreeModel</code> which holds the tree children in a <code>TreeSet</code></h:link></li>
				</ul>

				<h3>Changed in OmniFaces 1.7</h3>
				<ul>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code> is now able to handle error in error page itself</h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.7</h3>
				<ul>
					<li>Store constants of <code>&lt;o:importConstants&gt;</code> in an ordered map instead of an unordered map</li>
					<li><h:link outcome="/utils/WebXml"><code>WebXml</code> initialization failed in Weblogic because it attempts to load it as CDI managed bean</h:link></li>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Broken 404 "not found" error handling of <code>CombinedResourceHandler</code> (it threw <code>IllegalArgumentException</code> instead)</h:link></li>
					<li><code>GenericEnumConverter</code> failed in composites which are reused more than once in same view and on enums with custom bodies</li>
					<li><h:link outcome="/validators/validateOrder"><code>o:validateOrder</code> threw NPE on non-required fields</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.6.3?</h2>
				<p><em>Release date: 18 October, 2013</em></p>
		
				<h3>Fixed in OmniFaces 1.6.3</h3>
				<ul>
					<li>Fixed throwing <code>NoClassDefFoundError</code> when no JNDI is present (like e.g. in Google App Engine by default)</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.6.2?</h2>
				<p><em>Release date: 13 October, 2013</em></p>

				<h3>Fixed in OmniFaces 1.6.2</h3>
				<ul>
					<li>Fixed throwing <code>IllegalStateException</code> when no CDI is present (like e.g. in Tomcat by default)</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.6.1?</h2>
				<p><em>Release date: 5 October, 2013</em></p>
		
				<h3>Added in OmniFaces 1.6.1</h3>
				<ul>
					<li>New <code>BeanManager</code> enum which allows trying to get a CDI managed bean instance without any CDI dependency</li>
					<li><h:link outcome="/utils/Beans">New <code>Beans</code> utility class to ease working with CDI <code>BeanManager</code> API</h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.6.1</h3>
				<ul>
					<li><a href="https://github.com/omnifaces/omnifaces/wiki/Known-Issues-(CDI)">Fixed deployment problem when OmniFaces is bundled in multiple WARs of the same EAR, caused by the way how CDI behaves</a></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.6?</h2>
				<p><em>Release date: 19 September, 2013</em></p>

				<h3>Added in OmniFaces 1.6</h3>
				<ul>
					<li><h:link outcome="/cdi/Param">Injecting, converting and validating HTTP request parameters via CDI <code>@Param</code> (say, the CDI alternative to <code>&lt;f:viewParam&gt;</code>)</h:link></li>
					<li>Transparent support for dependency injection (CDI and EJB) inside <h:link outcome="/cdi/FacesConverter"><code>@FacesConverter</code></h:link> and <h:link outcome="/cdi/FacesValidator"><code>@FacesValidator</code></h:link></li>
					<li><h:link outcome="/converters/ValueChangeConverter"><code>ValueChangeConverter</code>, a base class which converts only when the submitted value is really changed as compared to the model value</h:link></li>
					<li><h:link outcome="/utils/Components"><code>Components#getCurrentCommand()</code> which returns the currently invoked command component (useful for logging)</h:link></li>
					<li><h:link outcome="/utils/Components"><code>Components#createValueExpression()</code>, <code>#createMethodExpression()</code>, <code>#createVoidMethodExpression()</code>, <code>#createActionListenerMethodExpression()</code> and <code>#createAjaxBehavior()</code></h:link></li>
					<li><h:link outcome="/utils/JNDI">New <code>JNDI</code> utility class</h:link></li>
					<li><h:link outcome="/utils/Faces"><code>Faces#getBookmarkableURL()</code>, <code>#getRequestHostname()</code> and <code>#setResponseStatus()</code></h:link></li>
					<li><h:link outcome="/components/messages"><code>message</code> attribute for <code>&lt;o:messages&gt;</code> to display a global message in case any of the in <code>for</code> specified components has a faces message</h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">Added <code>logException</code> method to <code>FullAjaxExceptionHandler</code> so that it can be overridden for more fine grained control of logging</h:link></li>
					<li><h:link outcome="/utils/FacesLocal">New <code>FacesLocal</code> utility class which extends <code>Faces</code> utility class with methods which take <code>FacesContext</code> as argument</h:link></li>
					<li><h:link outcome="/cdi/ViewScoped">CDI compatible <code>@ViewScoped</code> annotation specifically for JSF 2.0/2.1</h:link></li>
					<li><h:link outcome="/components/form"><code>useRequestURI</code> attribute for <code>&lt;o:form&gt;</code> to submit to exactly the same URL as in browser's address bar, with query string</h:link></li>
					<li><h:link outcome="/functions/Converters"><code>of:splitArray()</code> and <code>of:splitList()</code> to split an array or list in subarrays or sublists</h:link></li>
					<li><h:link outcome="/functions/Numbers"><code>of:formatPercent()</code> to format a number as a percentage</h:link></li>
				</ul>

				<h3>Changed in OmniFaces 1.6</h3>
				<ul>
					<li><h:link outcome="/validators/validateEqual"><code>showMessageFor</code> attribute of multi field validators now supports a space separated collection of client IDs where the message should be shown</h:link></li>
					<li><h:link outcome="/resourcehandlers/CDNResourceHandler">CDN resource handler now supports: 1) always being enabled, also during development stage, 2) wildcard configuration, and 3) EL resolving in CDN URL</h:link></li>
					<li><h:link outcome="/utils/Faces"><code>Faces#redirect()</code> will not use <code>String#format()</code> anymore when no params are supplied, this enables developers to pass already-encoded URLs to <code>Faces#redirect()</code></h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.6</h3>
				<ul>
					<li><h:link outcome="/utils/Ajax"><code>Json#encode()</code> incorrectly escaped singlequotes (was causing validation error in <code>jQuery.parseJSON()</code>)</h:link></li>
					<li><h:link outcome="/filters/GzipResponseFilter"><code>GzipResponseFilter</code> returned gzipped content as plain text in WebSphere 8.5 / Liberty</h:link></li>
					<li><h:link outcome="/components/onloadScript"><code>&lt;o:onloadScript&gt;</code> rendered its body as plain text during an <code>@all</code> render and didn't work anymore during a postback since Mojarra 2.1.24</h:link></li>
					<li><h:link outcome="/components/highlight"><code>&lt;o:highlight&gt;</code> threw duplicate component ID error in TomEE 1.6.0</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.5?</h2>
				<p><em>Release date: 10 June, 2013</em></p>

				<h3>Added in OmniFaces 1.5</h3>
				<ul>
					<li><h:link outcome="/components/param">Decode <code>UIComponent</code> children in <code>&lt;o:param&gt;</code> when no <code>value</code> attribute is specified (so that you can specify JSF/HTML code as <code>outputFormat</code> parameter)</h:link></li>
					<li>Allow endusers to specify custom passthrough attributes for <code>Html5RenderKit</code></li>
					<li><h:link outcome="/components/form">Added new <code>includeRequestParams</code> attribute to <code>&lt;o:form&gt;</code></h:link></li>
					<li><h:link outcome="/components/messages"><code>&lt;o:messages&gt;</code> which extends <code>&lt;h:messages&gt;</code> with support for multiple client IDs in <code>for</code> attribute, ability to disable HTML escaping and ability to perform markupless rendering like <code>&lt;ui:repeat&gt;</code></h:link></li>
					<li><h:link outcome="/utils/Components"><code>Components#includeCompositeComponent()</code> to programmatically include a composite component in given parent component</h:link></li>
					<li>Add list based alternatives for the converters that automatically convert based on select items:
						<h:link value="omnifaces.ListIndexConverter" outcome="/converters/ListIndexConverter"/> and
						<h:link value="omnifaces.ListConverter" outcome="/converters/ListConverter"/></li>
					<li><h:link outcome="/validators/JsfLabelMessageInterpolator">Message interpolator for Bean Validation that allows a component's label to be inserted in the middle of a message</h:link></li>
					<li><h:link outcome="/utils/Faces">New <code>Faces#getRequestURLWithQueryString()</code> which returns full request URL with query string</h:link></li>
					<li><h:link outcome="/components/cache">Added <code>reset</code> attribute to <code>&lt;o:cache&gt;</code> as an alternative for the programmatic resetting of a cache entry</h:link></li>
					<li><h:link outcome="/functions/Converters">Added converters for an <code>Iterable</code> to <code>List</code> and <code>DataModel</code>, so these can be used in <code>&lt;ui:repeat&gt;</code> and <code>&lt;h:dataTable&gt;</code></h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">New protected methods <code>FullAjaxExceptionHandler#findExceptionRootCause()</code> and <code>#findErrorPageLocation()</code> so that it can easier be subclassed</h:link></li>
					<li>EL functions <h:link outcome="/functions/Converters"><code>of:toJson()</code></h:link>, <h:link outcome="/functions/Strings"><code>of:replaceAll()</code> and <code>of:matches()</code></h:link></li>
				</ul>

				<h3>Changed in OmniFaces 1.5</h3>
				<ul>
					<li>Obtain current component via <code>UIComponent#getCurrentComponent()</code> when it's <code>null</code> in <code>Html5RenderKit</code> (so that it also works with PrimeFaces input components)</li>
					<li><h:link outcome="/utils/Events">Improved <code>CallbackPhaseListener</code> to support multiple callbacks instead of only one; the old <code>Events#setCallbackXxx()</code> methods are now deprecated</h:link></li>
					<li><h:link outcome="/utils/Ajax">Support <code>@all</code>, <code>@form</code> and <code>@this</code> in <Code>Ajax#update()</Code></h:link></li>
					<li><h:link outcome="/utils/Components">Moved <code>Faces#includeFacelet()</code> to <code>Components#includeFacelet()</code></h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.5</h3>
				<ul>
					<li>Add missing <code>createResource()</code> overrides 
						<h:link outcome="/resourcehandlers/CDNResourceHandler">to</h:link>&#xA0;
						<h:link outcome="/resourcehandlers/CombinedResourceHandler">all</h:link>&#xA0; 
						<h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>ResourceHandler</code>s</h:link> 
						(so that it also works in combination with other resource handlers which don't use <code>createResource(library, name)</code>)</li>
					<li><h:link outcome="/taghandlers/enableRestorableView">Normalize view ID in <code>RestorableViewHandler</code> (so that it also works when another suffix mapping is used than *.xhtml, this worked in 1.3 but broke in 1.4)</h:link></li>
					<li><h:link outcome="/converters/SelectItemsConverter">Add missing support for <code>noSelectionValue</code> attribute in <code>SelectItemsConverter</code></h:link></li>
					<li><h:link outcome="/facesviews/ExtensionlessURLs">Action URL generation for FacesViews didn't take other view handlers into account, now it does (so that it also works with PrimeFaces 4.0 Dialog framework).</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.4.1?</h2>
				<p><em>Release date: 12 March, 2013</em></p>

				<h3>Fixed in OmniFaces 1.4.1</h3>
				<ul>
					<li><h:link outcome="/filters/GzipResponseFilter">Reverted change in <code>GzipResponseFilter</code> which was made during FacesViews testing, which causes Glassfish to return blank pages</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.4?</h2>
				<p><em>Release date: 11 March, 2013</em></p>

				<h3>Added in OmniFaces 1.4</h3>
				<ul>
					<li><h:link outcome="/utils/Faces"><code>Faces#getMetadataAttribute()</code> and <code>getMetadataAttributes()</code> utility methods</h:link></li>
					<li><h:link outcome="/taghandlers/validator"><code>for</code> attribute in <code>&lt;o:validator&gt;</code> so that it can target inputs in composites</h:link></li>
					<li><h:link outcome="/components/tree"><code>TreeModel#getNextSibling()</code> and <code>getPreviousSibling()</code> methods</h:link></li>
					<li><h:link outcome="/functions/Objects"><code>of:coalesce()</code> function</h:link></li>
					<li><h:link outcome="/taghandlers/importFunctions"><code>&lt;o:importFunctions&gt;</code> taghandler to import public static non-void methods of a given type as EL functions</h:link></li>
					<li><h:link outcome="/functions/Dates"><code>of:getMonth()</code>, <code>of:getShortMonth()</code>, <code>of:getDayOfWeek()</code> and <code>of:getShortDayOfWeek()</code> functions</h:link></li>
					<li><h:link outcome="/components/param"><code>&lt;o:param&gt;</code> which extends <code>&lt;f:param&gt;</code> with support for a <code>Converter</code></h:link></li>
					<li><h:link outcome="/resourcehandlers/UnmappedResourceHandler"><code>UnmappedResourceHandler</code> which removes the JSF prefix/suffix mapping from resource paths</h:link></li>
					<li><h:link outcome="/facesviews/ExtensionlessURLs">Major overhaul of FacesViews; support for custom locations (including root) and extension, plus configurable actions when resource with extension or resource on configured path is requested</h:link></li>
					<li><h:link outcome="/utils/WebXml">Programmatically getting list of welcome pages and checking if access is allowed to a URL according to security constraints</h:link></li>
					<li><a href="#{_srcURL}org/omnifaces/VersionLoggerEventListener.java">OmniFaces version will now be logged to webapp log in this format: <code>INFO: Using OmniFaces version 1.4</code></a></li>
				</ul>

		 		<h3>Changed in OmniFaces 1.4</h3>
				<ul>
					<li><h:link outcome="/utils/Ajax">Support for Javabeans in <code>Json#encode()</code> as used by <code>Ajax#data()</code></h:link></li>
					<li><h:link outcome="/taghandlers/methodParam">Recognize and workaround for JUEL 2.2.5 and before bug in <code>&lt;o:methodParam&gt;</code> (not needed for JUEL 2.2.6 and later)</h:link></li>
					<li>Support <code>spellcheck</code> attribute on <code>HtmlInputText</code> and <code>HtmlInputTextarea</code> by <code>Html5RenderKit</code></li>
					<li>Support <code>autofocus</code>, <code>pattern</code> and <code>placeholder</code> attributes on <code>HtmlInputSecret</code> by <code>Html5RenderKit</code></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">Delegate rendering to JSF when currently not in render response phase in <code>FullAjaxExceptionHandler</code></h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">Skip <code>AbortProcessingException</code> in <code>FullAjaxExceptionHandler</code></h:link></li>
					<li><h:link outcome="/functions/Dates">Support <code>java.util.TimeZone</code> argument in <code>of:formatDateWithTimezone()</code></h:link></li>
					<li>Support <code>com.example.SomeClass.SomeEnum</code> notation on top of <code>com.example.SomeClass$SomeEnum</code> for inner enums in <code>&lt;o:importConstants&gt;</code></li>
					<li><h:link outcome="/eventlisteners/ResetInputAjaxActionListener">Skip unrendered components during component tree visit of <code>ResetInputAjaxActionListener</code></h:link></li>
					<li><h:link outcome="/filters/FacesExceptionFilter"><code>ELException</code> will now also be unwrapped by <code>FacesExceptionFilter</code> in order to improve exception handling in MyFaces</h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>ELException</code> will now also be unwrapped by <code>FullAjaxExceptionFilter</code> in order to improve ajax exception handling in MyFaces</h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.4</h3>
				<ul>
					<li><h:link outcome="/filters/GzipResponseFilter"><code>GzipResponseFilter</code> incorrectly skipped gzip when the written data was not within servletcontainer's and Facelets buffer size</h:link></li>
					<li><h:link outcome="/facesviews/ExtensionlessURLs">Fix initializaiton ordering problem of FacesViews in among others Glassfish server and removed accidentally introduced Servlet 3.0 dependency</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.3?</h2>
				<p><em>Release date: 20 December, 2012</em></p>

				<h3>Added in OmniFaces 1.3</h3>
				<ul>
					<li><h:link outcome="/utils/Ajax">Update specific <code>UIData</code> rows and columns programmatically</h:link></li>
					<li><h:link outcome="/taghandlers/enableRestorableView"><code>&lt;o:enableRestorableView&gt;</code> to prevent <code>ViewExpiredException</code> on a particular view</h:link></li>
					<li><h:link outcome="/validators/validateOne">New <code>validationFailed</code> attribute on <code>&lt;o:validateXxx&gt;</code> multi field validators</h:link></li>
					<li><h:link outcome="/validators/validateBean"><code>&lt;o:validateBean&gt;</code> which allows controlling bean validation on a per-<code>UIInput</code> and <code>UICommand</code> basis</h:link></li>
					<li><h:link outcome="/validators/validateUniqueColumn"><code>&lt;o:validateUniqueColumn&gt;</code> to validate input elements in single <code>UIColumn</code> on uniqueness</h:link></li>
					<li><h:link outcome="/functions/Numbers"><code>of:formatNumberDefault()</code> shortcut EL function to substitute <code>&lt;f:convertNumber&gt;</code> without pattern</h:link></li>
					<li><h:link outcome="/converters/SelectItemsIndexConverter"><code>SelectItemsIndexConverter</code> which converts select items by their index</h:link></li>
					<li><h:link outcome="/functions/Converters"><code>of:joinArray()</code>, <code>of:joinCollection()</code> and <code>of:joinMap()</code> functions</h:link></li>
					<li><h:link outcome="/taghandlers/validator">New <code>message</code> attribute on <code>&lt;o:validator&gt;</code> which allows specifying validator message on a per-validator basis</h:link></li>
					<li><code>&lt;o:commandScript&gt;</code> which generates a JavaScript function handler to <code>jsf.ajax.request</code>, so that JSF ajax requests can be invoked by JavaScript</li>
					<li><h:link outcome="/functions/Dates"><code>of:addXxx()</code> and <code>of:xxxBetween()</code> functions to manipulate/calculate dates</h:link></li>
					<li><h:link outcome="/functions/Dates"><code>of:getDaysOfWeek()</code> and <code>of:getShortDaysOfWeek()</code> functions to retrieve a mapping of days of week</h:link></li>
				</ul>
				<h3>Changed in OmniFaces 1.3</h3>
				<ul>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Support for RichFaces specific resources in <code>CombinedResourceHandler</code></h:link></li>
					<li>Support for <code>autofocus</code> in <code>HtmlCommandButton</code> by <code>Html5RenderKit</code></li>
				</ul>
				<h3>Fixed in OmniFaces 1.3</h3>
				<ul>
					<li><h:link outcome="/contexts/OmniPartialViewContext">Broken delegation of <code>OmniPartialViewContext</code> in RichFaces (caused by RichFaces specific design error)</h:link></li>
					<li><h:link outcome="/contexts/OmniPartialViewContext">Broken delegation of <code>OmniPartialResponseWriter</code> in MyFaces (caused by MyFaces specific design error)</h:link></li>
					<li><h:link outcome="/components/tree">Broken initial state of <code>EditableValueHolderStateHelper</code> which is used in <code>o:tree</code> (which would only cause input components to appear in an invalidated state on initial request &#8212; and thus also incorrect highlighting in e.g. PrimeFaces) and added check on visit hint to skip iteration</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.2?</h2>
				<p><em>Release date: 20 October, 2012</em></p>

				<h3>Added in OmniFaces 1.2</h3>
				<ul>
					<li><h:link outcome="/filters/CharacterEncodingFilter">Character encoding filter</h:link></li>
					<li><h:link outcome="/resourcehandlers/CDNResourceHandler">Resource handler which replaces resource URLs by CDN URLs</h:link></li>
					<li><h:link outcome="/taghandlers/ignoreValidationFailed">Ignore validation failures on submit</h:link></li>
					<li><h:link outcome="/components/outputFormat">Store outputFormat result in a variable</h:link></li>
					<li><h:link outcome="/functions/Strings">Several <code>of:format()</code> shortcut EL functions to format strings in EL</h:link></li>
					<li><h:link outcome="/utils/Ajax"><code>Ajax</code> utility class to ease programmatically updating components, executing callback scripts and injecting variables in JS scope</h:link></li>
					<li><h:link outcome="/contexts/OmniPartialViewContext"><code>OmniPartialViewContext</code> for the <code>Ajax</code> utility class, better exception handling during rendering of ajax response by <code>FullAjaxExceptionHandler</code> and the fix of no-feedback problem when the view is expired during ajax request on a restricted page</h:link></li>
					<li>New multi field validators which validates if <h:link outcome="/validators/validateOne">ONLY ONE</h:link> or <h:link outcome="/validators/validateOneOrNone">ONE or NONE</h:link> of the given inputs has been filled out</li>
					<li><h:link outcome="/functions/Numbers"><code>of:formatCurrency()</code> and <code>of:formatNumber()</code> EL functions</h:link></li>
					<li><code>GenericEnumConverter</code> for use in <code>UISelectMany</code> components with <code>List&lt;Enum&gt;</code></li>
					<li>Some new utility methods in <h:link outcome="/utils/Faces"><code>Faces</code></h:link> and <h:link outcome="/utils/Components"><code>Components</code></h:link></li>
				</ul>

				<h3>Changed in OmniFaces 1.2</h3>
				<ul>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Support to render JS/CSS inline by <code>CombinedResourceHandler</code></h:link></li>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Changed generation of combined resource IDs by <code>CombinedResourceHandler</code> so that it's now reversible</h:link></li>
					<li><h:link outcome="/components/tree">Improved <code>rendered</code> attribute of <code>&lt;o:treeNodeItem&gt;</code> so that it can now also see <code>&lt;o:tree&gt;</code> <code>var</code> and <code>varNode</code></h:link></li>
					<li><h:link outcome="/validators/validateAll">Improved components attribute of multi field validators so that it's resolved relative to parent <code>UINamingContainer</code> instead of to parent <code>UIForm</code></h:link></li>
					<li><h:link outcome="/validators/validateAll">Improved multi field validators to recognize <code>UISelectBoolean</code> components as well</h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">Improved <code>FullAjaxExceptionHandler</code> to better handle exceptions during ajax render response phase</h:link></li>
					<li><h:link outcome="/components/highlight">Improved <code>&lt;o:highlight&gt;</code> to apply style class on associated labels as well</h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.2</h3>
				<ul>
					<li><h:link outcome="/components/cache">Serialization and state saving issues in <code>&lt;o:cache&gt;</code></h:link></li>
					<li><h:link outcome="/converters/SelectItemsConverter">Broken behaviour in MyFaces when using null values in <code>SelectItemsConverter</code></h:link></li>
					<li><h:link outcome="/filters/GzipResponseFilter">Removed accidentally introduced Servlet 3.0 dependency in <code>GzipResponseFilter</code> and improved recognition of non-gzippable responses (content range, etc)</h:link></li>
					<li><h:link outcome="/eventlisteners/ResetInputAjaxActionListener">Broken behavior of <code>ResetInputAjaxActionListener</code> when both PrimeFaces and RichFaces is used in same webapp</h:link></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 1.1?</h2>
				<p><em>Release date: 10 July, 2012</em></p>

				<h3>Added in OmniFaces 1.1</h3>
				<ul>
					<li><h:link outcome="/components/componentIdParam">Rendering specific components by a GET request parameter</h:link></li>
					<li><h:link outcome="/components/form">Form with support to include view parameters in action URL</h:link></li>
					<li><h:link outcome="/components/cache">Caching for page fragments with support for scopes, time to live and LRU eviction</h:link></li>
					<li><h:link outcome="/eventlisteners/InvokeActionEventListener"><code>&lt;f:event&gt;</code> hook for pre and post invoke action phase</h:link></li>
					<li><h:link outcome="/filters/GzipResponseFilter">GZIP compression filter for HTTP responses</h:link></li>
					<li><h:link outcome="/functions/Strings"><code>of:capitalize()</code> function to capitalize a string</h:link></li>
					<li><code>HTML5RenderKit</code> which adds support for several HTML5 specific attributes to <code>UIForm</code> and <code>UIInput</code> components</li>
					<li>Importing constant values into EL scope with <code>&lt;o:importConstants&gt;</code></li>
					<li><h:link outcome="/utils/Messages">New Messages builder</h:link></li>
					<li><h:link outcome="/utils/Faces">A whole bunch of new utility methods in <code>Faces</code></h:link></li>
					<li><h:link outcome="/utils/Messages">A new builder in Messages which also allows you to set the message detail</h:link></li>
					<li><h:link outcome="/validators/validateAll">New validator which validates if ALL of the given inputs have been filled out</h:link></li>
					<li>Maven integration</li>
				</ul>

				<h3>Changed in OmniFaces 1.1</h3>
				<ul>
					<li><h:link outcome="/components/tree">Support for action components inside o:tree and new <code>TreeModel#remove()</code> method</h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">Support for <code>web-fragment.xml</code> in <code>FullAjaxExceptionHandler</code></h:link></li>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Support to exclude or suppress specific resources in <code>CombinedResourceHandler</code></h:link></li>
					<li><h:link outcome="/validators/validateOrder">Support for specific ordering type inside <code>&lt;o:validateOrder&gt;</code></h:link></li>
				</ul>

				<h3>Fixed in OmniFaces 1.1</h3>
				<ul>
					<li><h:link outcome="/eventlisteners/ResetInputAjaxActionListener">Broken behaviour inside <code>UIData</code> components in <code>ResetInputAjaxActionListener</code></h:link></li>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Incorrect behaviour on synchronous postbacks and NPE on inline scripts in <code>CombinedResourceHandler</code></h:link></li>
				</ul>

				<hr />

				<h2>What's available in OmniFaces 1.0?</h2>	
				<p><em>Release date: 01 June, 2012</em></p>

				<h3>Features already available in initial OmniFaces 1.0 release</h3>
				<ul>
					<li><h:link outcome="/components/conditionalComment">Conditional comment rendering for IE</h:link></li>
					<li><h:link outcome="/components/highlight">Highlighting fields that failed validation</h:link></li>
					<li><h:link outcome="/components/onloadScript">Executing scripts on load of every (ajax) response</h:link></li>
					<li><h:link outcome="/components/outputLabel">OutputLabel automatically setting label of associated input component</h:link></li>
					<li><h:link outcome="/components/resourceInclude">Include Servlets and JSP pages in Facelets</h:link></li>
					<li><h:link outcome="/components/tree">Tree with full custom markup per level (useable for various recursive use cases)</h:link></li>
					<li><h:link outcome="/components/viewParam">Stateless view parameter</h:link></li>
					<li><h:link outcome="/converters/SelectItemsConverter">Automatic conversion of model objects in drop-downs and other select components</h:link></li>
					<li><h:link outcome="/eventlisteners/ResetInputAjaxActionListener">Reset for input fields making them always updateable via ajax</h:link></li>
					<li><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler">Ajax aware exception handler</h:link></li>
					<li><h:link outcome="/facesviews/ExtensionlessURLs">Extensionless URLs without need to register individual pages</h:link></li>
					<li><h:link outcome="/filters/FacesExceptionFilter">Proper 404 for <code>FacesFileNotFoundException</code></h:link></li>
					<li><h:link outcome="/filters/HttpFilter"><code>HttpFilter</code> convenience class as analogy to <code>HttpServlet</code></h:link></li>
					<li>Collections of EL functions for dealing with <h:link outcome="/functions/Arrays">arrays</h:link>, <h:link outcome="/functions/Converters">conversion</h:link>, <h:link outcome="/functions/Dates">dates</h:link> and <h:link outcome="/functions/Strings">strings</h:link></li>
					<li>Convenience managed beans for the <h:link outcome="/managedbeans/now">current time</h:link> and <h:link outcome="/managedbeans/startup">server startup time</h:link></li>
					<li><h:link outcome="/resourcehandlers/CombinedResourceHandler">Combining separate scripts and stylesheets to reduce HTTP requests</h:link></li>
					<li>Render-time evaluation for <h:link outcome="/taghandlers/converter"><code>&lt;f:converter&gt;</code></h:link> and <h:link outcome="/taghandlers/validator"><code>&lt;f:validator&gt;</code></h:link> attributes</li>
					<li><h:link outcome="/taghandlers/methodParam">Passing a method expression into Facelets tag</h:link></li>
					<li>Collection of Java methods for dealing with <h:link outcome="/utils/Components">components</h:link>, <h:link outcome="/utils/Events">events</h:link>, <h:link outcome="/utils/Exceptions">exceptions</h:link>, <h:link outcome="/utils/Messages">messages</h:link> and <h:link outcome="/utils/Faces">JSF in general</h:link></li>
					<li><h:link outcome="/validators/RequiredCheckboxValidator">Checkbox with required attribute that works intuitively</h:link></li>
					<li>Multi-field validators, for "<h:link outcome="/validators/validateAllOrNone">all or none</h:link>", "<h:link outcome="/validators/validateEqual">all equal</h:link>", "<h:link outcome="/validators/validateOneOrMore">one or more</h:link>", "<h:link outcome="/validators/validateOrder">all in order</h:link>" and "<h:link outcome="/validators/validateUnique">all unique</h:link>" validations</li>
				</ul>
			</p:tab>

			<p:tab id="v4" title="4.x">
				<h2>What's new in OmniFaces 4.0-M17?</h2>
				<p><em>Release date: 14 August, 2022</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_13_4');return false;">It's the Jakartified version of 3.13.4</a></p>

				<h3>Fixed in OmniFaces 4.0-M17</h3>
				<ul>
					<li><os:githubLink issue="695" /><h:link outcome="/facesviews/ExtensionlessURLs"><code>MultiViews</code></h:link> threw <code>java.io.FileNotFoundException</code> when Servlet 4 Mapping API was used by Faces implementation, such as Mojarra 4.0.0</li>
					<li><os:githubLink issue="696" /><h:link outcome="/managedbeans/now"><code>\#{now}</code></h:link> and <code>\#{now.zonedDateTime}</code> were incorrectly at UTC instead of System Default TimeZone (as it was in previous OmniFaces versions using <code>java.util.Date</code> instead of <code>java.time.Temporal</code>); the <code>\#{now.instant}</code> and <code>\#{now.time}</code> remain at UTC</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 4.0-M16?</h2>
				<p><em>Release date: 14 May, 2022</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_13_3');return false;">It's the Jakartified version of 3.13.3</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M15?</h2>
				<p><em>Release date: 2 May, 2022</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_13_2');return false;">It's the Jakartified version of 3.13.2</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M14?</h2>
				<p><em>Release date: 1 May, 2022</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_13_1');return false;">It's the Jakartified version of 3.13.1</a></p>

				<h3>Changed in OmniFaces 4.0-M12</h3>
				<ul>
					<li><os:githubLink issue="675" />All <code>&lt;h:outputScript library="omnifaces"&gt;</code> resources such as <code>omnifaces.js</code> were <a href="https://github.com/omnifaces/omnifaces/pull/675/commits/613ba49e802a6b34169f75a91cfeb7c8ae0c3553" target="_blank">migrated</a> from JavaScript to TypeScript</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 4.0-M13?</h2>
				<p><em>Release date: 22 January, 2022</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_13');return false;">It's the Jakartified version of 3.13</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M12?</h2>
				<p><em>Release date: 15 November, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_12');return false;">It's the Jakartified version of 3.12, and the first one run-time compatible with Faces 4.0</a></p>

				<h3>Added in OmniFaces 4.0-M12</h3>
				<ul>
					<li><os:githubLink issue="648" /><h:link outcome="/utils/Components"><code>Components#addFacesScriptResource()</code></h:link> which allows the component developer to automatically include either the Faces 4.0-specific <code>faces.js</code> or the JSF 2.3-specific <code>jsf.js</code> depending on whether the former is available as a resource in the current deployment</li>
					<li><os:githubLink issue="655" /><h:link outcome="/utils/Faces"><code>Faces#addResponseCookie()</code></h:link> got a new overload which allows adding custom attributes to the cookie such as <code>SameSite:None</code> (NOTE: works currently only when using minimally Mojarra 4.0.0-M2 on top of minimally Servlet 6.0.0-M1)</li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 4.0-M11?</h2>
				<p><em>Release date: 20 October, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_11_2');return false;">It's the Jakartified version of 3.11.2, and the first one compile-time compatible with Faces 4.0</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M10?</h2>
				<p><em>Release date: 15 October, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_11_2');return false;">It's the Jakartified version of 3.11.2</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M9?</h2>
				<p><em>Release date: 5 June, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_11_1');return false;">It's the Jakartified version of 3.11.1</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M8?</h2>
				<p><em>Release date: 4 April, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_11');return false;">It's the Jakartified version of 3.11</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M7?</h2>
				<p><em>Release date: 28 January, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_10_1');return false;">It's the Jakartified version of 3.10.1</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M6?</h2>
				<p><em>Release date: 24 January, 2021</em></p>
				<p>DO NOT USE IT! It's broken. Maven deploy somehow created a halfbaked JAR, missing a lot of files.</p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M5?</h2>
				<p><em>Release date: 24 January, 2021</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_10');return false;">It's the Jakartified version of 3.10</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M4?</h2>
				<p><em>Release date: 19 December, 2020</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_9');return false;">It's the Jakartified version of 3.9</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M3?</h2>
				<p><em>Release date: 25 October, 2020</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_8_1');return false;">It's the Jakartified version of 3.8.1</a></p>

				<h3>Changed in OmniFaces 4.0-M3</h3>
				<ul>
					<li><os:githubLink commit="9186a5c" /><code>Callback#Void/Returning/WithArgument/ReturningWithArgument</code> are <strong>deprecated</strong> and have been replaced by <code>Runnable/Supplier/Consumer/Function</code></li>
				</ul>

				<hr />

				<h2>What's new in OmniFaces 4.0-M2?</h2>
				<p><em>Release date: 12 September, 2020</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_8');return false;">It's the Jakartified version of 3.8</a></p>

				<hr />

				<h2>What's new in OmniFaces 4.0-M1?</h2>
				<p><em>Release date: 12 July, 2020</em></p>
				<p><a href="#" onclick="PF('widget_versions').select(0);functions.scrollTo('3_7_1');return false;">It's the Jakartified version of 3.7.1</a></p>

				<hr />

				<h3>Major in OmniFaces 4.0</h3>
				<ul class="important">
					<li>Minimum dependencies are changed from Java 1.8, JSF 2.3, EL 3.0, Servlet 3.1, CDI 2.0, WS 1.1 and BV 2.0 to <strong>Java 11, JSF 3.0, EL 4.0, Servlet 5.0, CDI 3.0, WS 2.0 and BV 3.0</strong>;
						as of now, OmniFaces 4.0 is <strong>NOT</strong> backwards compatible with previous versions because of the compiler-incompatible rename of the <code>javax.*</code> package to <code>jakarta.*</code> package.
					</li>
					<li>All in 3.x <code>@Deprecated</code> things have been removed, 
						such as <code>&lt;o:form includeViewParams="true"&gt;</code> (has become the default behavior),
						<code>WebXml.INSTANCE</code> and <code>FacesConfigXML.INSTANCE</code> (replaced by <code>WebXml.instance()</code> and <code>FacesConfigXml.instance()</code>)
						and <code>omnifaces:fixviewstate.js</code> (replaced by JSF 2.2 native fix)
					</li>
					<li><h:link outcome="/managedbeans/now"><code>\#{now}</code></h:link> and <h:link outcome="/managedbeans/startup"><code>\#{startup}</code></h:link> 
						will now return an instance of <code>java.time.Temporal</code> instead of <code>java.util.Date</code>;
						it still supports the <code>time</code> property as in <code>\#{now.time}</code> and <code>\#{startup.time}</code>;
						additionally, it's got two new convenience properties: <code>instant</code> and <code>zonedDateTime</code> as in <code>\#{now.instant}</code>, <code>\#{now.zonedDateTime}</code>, <code>\#{startup.instant}</code> and <code>\#{startup.zonedDateTime}</code>
					</li>
					<li><code>Callback</code> interfaces which dated from Java 1.7 and have replacements available in Java 1.8 are now <code>@Deprecated</code>.
						<code>Callback.Void</code> is replaced by <code>Runnable</code>, <code>Callback.Returning</code> is replaced by <code>Supplier</code>, <code>Callback.WithArgument</code> is replaced by <code>Consumer</code> and <code>Callback.ReturningWithArgument</code> is replaced by <code>Function</code>.
						Utility methods in <h:link outcome="/utils/Components"><code>Components</code></h:link> and <h:link outcome="/utils/Events"><code>Events</code></h:link> are have been adjusted.
					</li>
				</ul>
			</p:tab>
		</p:tabView>
	</ui:define>
</ui:composition>
