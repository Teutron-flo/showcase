<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="jakarta.faces.core"
	xmlns:h="jakarta.faces.html"
	xmlns:ui="jakarta.faces.facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.path" value="el/functions/Converters" />
			<f:attribute name="vdl.paths" value="of/setToList.fn,of/mapToList.fn,of/joinArray.fn,of/joinCollection.fn,of/joinMap.fn,of/splitArray.fn,of/splitList.fn,of/toJson.fn" />
			<f:attribute name="src.paths" value="classes/org/omnifaces/showcase/functions/ConvertersBean.java" />
		</f:metadata>
	</ui:define>

	<ui:define name="description-extra">
		<ui:include src="/WEB-INF/includes/utils/feature-request.xhtml" />
	</ui:define>		
	
	<ui:define name="demo">
		<h3>Using <code>of:xxxToList/Model()</code> functions</h3>
		<p>
			Convert <code>Set&lt;E&gt;</code> to <code>List&lt;E&gt;</code> using <code>\#{of:setToList()}</code>:
			<strong>
				<ui:repeat value="#{of:setToList(convertersBean.set)}" var="item" varStatus="loop">
					#{item}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		<p>
			Convert <code>Iterable&lt;E&gt;</code> to <code>List&lt;E&gt;</code> using <code>\#{of:iterableToList()}</code>:
			<strong>
				<ui:repeat value="#{of:iterableToList(convertersBean.iterable)}" var="item" varStatus="loop">
					#{item}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		<p>
			(Alternative) Convert <code>Iterable&lt;E&gt;</code> to <code>DataModel&lt;E&gt;</code> using <code>\#{of:iterableToModel()}</code>:
			<strong>
				<ui:repeat value="#{of:iterableToModel(convertersBean.iterable)}" var="item" varStatus="loop">
					#{item}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		<p>
			(Alternative) Convert <code>Set&lt;E&gt;</code> to <code>DataModel&lt;E&gt;</code> using <code>\#{of:iterableToModel()}</code>:
			<strong>
				<ui:repeat value="#{of:iterableToModel(convertersBean.set)}" var="item" varStatus="loop">
					#{item}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		<p>
			Convert <code>Map&lt;K, V&gt;</code> to <code>List&lt;Entry&lt;K, V&gt;&gt;</code> using <code>\#{of:mapToList()}</code>:
			<strong>
				<ui:repeat value="#{of:mapToList(convertersBean.map)}" var="entry" varStatus="loop">
					#{entry.key}=#{entry.value}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		
		<hr />

		<h3>Just to show EL 2.2 ability to invoke non-getter methods, so that <code>of:xxxToList()</code> are not necessary</h3>
		<p>
			Use <code>\#{bean.set.toArray()}</code> directly:
			<strong>
				<ui:repeat value="#{convertersBean.set.toArray()}" var="item" varStatus="loop">
					#{item}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		<p>
			Use <code>\#{bean.map.entrySet().toArray()}</code> directly:
			<strong>
				<ui:repeat value="#{convertersBean.map.entrySet().toArray()}" var="entry" varStatus="loop">
					#{entry.key}=#{entry.value}#{!loop.last ? ', ' : ''}
				</ui:repeat>
			</strong>
		</p>
		
		<hr />
		
		<h3>Using <code>of:joinXxx()</code> functions</h3>
		<p>
			Join array to string using <code>\#{of:joinArray()}</code>: 
			<strong>#{of:joinArray(convertersBean.array, ', ')}</strong>
		</p>
		<p>
			Join collection to string using <code>\#{of:joinCollection()}</code>:
			<strong>#{of:joinCollection(convertersBean.set, ', ')}</strong>
		</p>
		<p>
			Join map to string using <code>\#{of:joinMap()}</code>: 
			<strong>#{of:joinMap(convertersBean.map, '=', ', ')}</strong>
		</p>
		
		<hr />
		
		<h3>Using <code>of:splitXxx()</code> functions</h3>
		<p>
			Split an array of 9 elements into a 3-column div.
		</p>
		<div>
			<ui:repeat value="#{of:splitArray(convertersBean.bigArray, 3)}" var="subArray">
				<div>
					<ui:repeat value="#{subArray}" var="item">
						<span>#{item}</span>
					</ui:repeat>
				</div>
			</ui:repeat>
		</div>
		<p>
			Split a list of 9 elements into 3 lists.
		</p>
		<ui:repeat value="#{of:splitList(convertersBean.bigList, 3)}" var="subList">
			<ul>
				<ui:repeat value="#{subList}" var="item">
					<li>#{item}</li>
				</ui:repeat>
			</ul>
		</ui:repeat>

		<hr />
		
		<h3>Encode any object to JSON</h3>
		<p>
			The following should represent valid JavaScript variables:
		</p>
		<pre class="prettyprint"><code class="lang-javascript"> var array = #{of:toJson(convertersBean.array)};
 var collection = #{of:toJson(convertersBean.set)};
 var map = #{of:toJson(convertersBean.map)};
 var exampleEntities = #{of:toJson(selectItemsBean.exampleEntities)};
 var serverDate = new Date(#{of:toJson(now)});</code></pre>
	</ui:define>
</ui:composition>