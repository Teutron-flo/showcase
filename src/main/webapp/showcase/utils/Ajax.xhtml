<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="jakarta.faces.core"
	xmlns:h="jakarta.faces.html"
	xmlns:ui="jakarta.faces.facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:p="http://primefaces.org/ui"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.path" value="util/Ajax" />
			<f:attribute name="src.paths" value="classes/org/omnifaces/showcase/utils/AjaxBean.java" />
		</f:metadata>
	</ui:define>

	<ui:define name="description-extra">
		<ui:include src="/WEB-INF/includes/utils/feature-request.xhtml" />
	</ui:define>
	
	<ui:define name="demo">
		<h3>Update a component programmatically</h3>
		<h:form id="form">
			<h:commandButton value="submit" action="#{ajaxBean.update}">
				<f:ajax />
			</h:commandButton>
			<p>It's now <h:outputText id="timestamp" value="#{now.toString()}" /></p>
		</h:form>

		<hr />
		
		<h3>Update specific UIData rows and columns programmatically (standard JSF example)</h3>
		<h:form>
			<h:dataTable binding="#{table1}" value="#{of:createArray(3)}" width="100%">
				<h:column><f:facet name="header">col1</f:facet><h:panelGroup id="col1">#{now}</h:panelGroup></h:column>
				<h:column><f:facet name="header">col2</f:facet><h:panelGroup id="col2">#{now}</h:panelGroup></h:column>
				<h:column><f:facet name="header">col3</f:facet><h:panelGroup id="col3">#{now}</h:panelGroup></h:column>
			</h:dataTable>

			<p>
				<f:ajax>
					<h:commandButton value="update row1" action="#{ajaxBean.updateRow(table1, 0)}" />
					<h:commandButton value="update row2" action="#{ajaxBean.updateRow(table1, 1)}" />
					<h:commandButton value="update row3" action="#{ajaxBean.updateRow(table1, 2)}" />
					<h:commandButton value="update col1" action="#{ajaxBean.updateColumn(table1, 0)}" />
					<h:commandButton value="update col2" action="#{ajaxBean.updateColumn(table1, 1)}" />
					<h:commandButton value="update col3" action="#{ajaxBean.updateColumn(table1, 2)}" />
				</f:ajax>
			</p>
		</h:form>

		<hr />

		<h3>Update specific UIData rows and columns programmatically (PrimeFaces example)</h3>
		<h:form>
			<p:dataTable binding="#{table2}" value="#{of:createArray(3)}">
				<p:column headerText="col1"><h:panelGroup id="col1">#{now}</h:panelGroup></p:column>
				<p:column headerText="col2"><h:panelGroup id="col2">#{now}</h:panelGroup></p:column>
				<p:column headerText="col3"><h:panelGroup id="col3">#{now}</h:panelGroup></p:column>
			</p:dataTable>

			<p>
				<p:commandButton value="update row1" action="#{ajaxBean.updateRow(table2, 0)}" />
				<p:commandButton value="update row2" action="#{ajaxBean.updateRow(table2, 1)}" />
				<p:commandButton value="update row3" action="#{ajaxBean.updateRow(table2, 2)}" />
				<p:commandButton value="update col1" action="#{ajaxBean.updateColumn(table2, 0)}" />
				<p:commandButton value="update col2" action="#{ajaxBean.updateColumn(table2, 1)}" />
				<p:commandButton value="update col3" action="#{ajaxBean.updateColumn(table2, 2)}" />
			</p>
		</h:form>

		<hr />
		
		<h3>Execute a callback script programmatically</h3>
		<h:form>
			<h:commandButton value="submit" action="#{ajaxBean.callback}">
				<f:ajax />
			</h:commandButton>
		</h:form>

		<hr />
		
		<h3>Add arguments to the JavaScript scope</h3>
		<h:form>
			<h:commandButton value="submit" onclick="$('#showData').empty()" action="#{ajaxBean.argument}">
				<f:ajax />
			</h:commandButton>
		</h:form>
		<ul id="showData"></ul>
		<h:outputScript>
			function showData() {
				var data = OmniFaces.Ajax.data;
				var $showData = $("#showData");
				
				$.each(data, function(key, value) {
					$("&lt;li&gt;").text(key + "=" + JSON.stringify(value)).appendTo($showData);
				});
			}
		</h:outputScript>
	</ui:define>
</ui:composition>