<ui:composition template="/WEB-INF/templates/showcase.xhtml" xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="jakarta.faces.core" 
	xmlns:h="jakarta.faces.html"
	xmlns:ui="jakarta.faces.facelets" 
	xmlns:o="http://omnifaces.org/ui"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.path" value="component/output/Param" />
			<f:attribute name="vdl.paths" value="o/param" />
			<f:attribute name="src.paths" value="classes/org/omnifaces/showcase/components/ParamBean.java,classes/org/omnifaces/showcase/model/ExampleEntity.java,classes/org/omnifaces/showcase/components/ExampleEntityConverter.java,classes/org/omnifaces/showcase/i18n/text.properties" />
		</f:metadata>
	</ui:define>

	<ui:define name="demo">
		<h3>Using converter</h3>
		<p>
			We want to pass this example entity referenced by <code>\#{paramBean.exampleEntity}</code> as request parameter:
			<strong>#{paramBean.exampleEntity}</strong>
		</p>
		<p>
			<h:link value="f:param, check the link URL, it's merely printing the example entity's toString()">
				<f:param name="exampleEntity" value="#{paramBean.exampleEntity}" />
			</h:link>
		</p>
		<p>
			<h:link value="o:param with converter, the param in the link URL represents the converted value">
				<o:param name="exampleEntity" value="#{paramBean.exampleEntity}" converter="exampleEntityConverter" />
			</h:link>
		</p>
		<p>
			We could of course also have used <code>\#{paramBean.exampleEntity.id}</code> as param value, but this is not
			DRY if you already have a converter for the entity and this is thus potentially maintenance-unfriendly.
		</p>
		
		<h3>Using Faces and HTML as param value</h3>
		<p>
			<f:loadBundle basename="org.omnifaces.showcase.i18n.text" var="text" />
			<o:outputFormat value="#{text['showcase.components.param.demo.whatsnew.link']}" var="_link">
				<f:param value="#{_omniFacesVersionXYZ}" />
			</o:outputFormat>
			<h:outputFormat value="#{text['showcase.components.param.demo.whatsnew']}" escape="false">
				<o:param><h:link outcome="#{text['showcase.whatsnew.outcome']}" value="#{_link}" /></o:param>
			</h:outputFormat>
		</p>
	</ui:define>
</ui:composition>