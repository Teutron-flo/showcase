<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.path" value="component/output/GraphicImage" />
			<f:attribute name="vdl.paths" value="o/graphicImage" />
			<f:attribute name="src.paths" value="classes/org/omnifaces/showcase/components/Images.java" />
			<f:attribute name="js.paths" value="omnifaces.js/GraphicImage.ts" />
		</f:metadata>
	</ui:define>

	<ui:define name="demo">
		<h3>The below one renders JSF resource as data URI</h3>
		<p>
			<o:graphicImage library="layout" name="img/OmniFaces-logo-90x90-black.png" dataURI="true" />
		</p>

		<h3>The below one renders InputStream property as resource</h3>
		<p>
			<o:graphicImage value="#{images.logo}" lastModified="#{startup.time}" />
		</p>

		<h3>The below one renders InputStream property as data URI</h3>
		<p>
			<o:graphicImage value="#{images.logo}" dataURI="true" />
		</p>

		<h3>The below one renders byte[] property taking a Long argument as resource in <code>&lt;ui:repeat&gt;</code> loop</h3>
		<p>
			<ui:repeat value="#{images.ids}" var="id">
				<o:graphicImage value="#{images.getContent(id)}" lastModified="#{startup.time}" />
			</ui:repeat>
		</p>

		<h3>The below one renders InputStream property with SVG content as resource</h3>
		<p>
			<o:graphicImage value="#{images.svgLogo}" type="svg" lastModified="#{startup.time}" height="90" />
		</p>

		<h3>The below one renders the same image as a lazy image</h3>
		<p>
			<o:graphicImage value="#{images.svgLogo}" type="svg" lastModified="0#{startup.time}" height="90" lazy="true" />
		</p>
	</ui:define>
</ui:composition>